{"version":3,"sources":["EnterTradesTable.js","TradeRow.js","colors.js","ManTradesTable.js","AccessForm.js","admin/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["TradeRow","props","state","value_ticker","ticker","value_weight","weight","errText","undefined","TableRow","TableCell","TextField","value","this","placeholder","InputProps","style","color","inputProps","textTransform","onChange","e","setState","target","handleEdit","toUpperCase","parseFloat","index","allowNegative","decimalScale","customInput","weightPlace","endAdornment","InputAdornment","position","onValueChange","console","log","floatValue","React","Component","piePallete","BASE_DOMAIN","ManTradesTable","componentDidMount","editId","axios","get","handleCreate","post","user_id","userId","edit_id","portfolio","trades","filter","t","isNaN","then","res","advanceStep","catch","err","response","errMsg","data","handleHoldingEdit","validPortfolio","new_trades","length","push","total_weight","reduce","sum","isDup","i","concat","map","title","Typography","variant","display","alignItems","marginTop","flexGrow","marginLeft","Table","TableHead","TableBody","toFixed","textAlign","Button","disabled","onClick","backgroundImage","opacity","radius","lineWidth","viewBoxSize","center","lengthAngle","Math","min","ICONS","twitter","Twitter","youtube","YouTube","general","LinkIcon","newsletter","Email","LinksUpload","links","setLinks","alternateLinks","Object","keys","o","link_type","url","l","includes","useState","newLink","setNewLink","link","Icon","templinks","splice","handleDelete","Select","al","DIcon","MenuItem","AccessCode","input","setInput","error","setError","theme","useTheme","handleFailure","Lock","flexDirection","justifyContent","label","helperText","spacing","allow","UserInfo","setUserId","editDetails","setEditDetails","refresh","setTitle","description","setDescription","setLink","subdomain","setSubdomain","name","setName","email","setEmail","phone","setPhone","show_amounts","showAmounts","setShowAmounts","setDangerousUserId","useEffect","user","add_plaid","plaid_connected","handleSubmit","id","editUrl","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","params","subdomain_link","href","padding","Alert","severity","Paper","marginBottom","fullWidth","temp","replace","onBlur","FormControl","component","margin","size","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","CSVUpload","presignedPost","setPresignedPost","uploading","setUploading","preview","raw","uploadFile","setUploadFile","getSignedUrl","fileName","file_name","CircularProgress","fontWeight","preventDefault","formData","FormData","fields","forEach","k","v","append","config","headers","onUploadProgress","progressEvent","parseInt","round","loaded","total","finally","type","hidden","files","split","pop","URL","createObjectURL","PlaidInfo","token","setToken","showTable","plaidStatus","setPlaidStatus","link_token","brokers","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","maxWidth","marginRight","status","Wait","useWindowSize","width","height","Finished","displayDetail","pageUrl","Update","InstructiveFileUpload","src","SignIn","success","setSuccess","submitting","setSubmitting","LinearProgress","varian","AccessForm","step","setStep","setRefresh","setEditId","setErr","window","location","hash","search","URLSearchParams","plaid_login","editable","assign","Grid","container","justify","minHeight","className","item","xs","sm","md","IconButton","float","ArrowBackIosRounded","paddingTop","paddingBottom","drawerWidth","useStyles","makeStyles","root","drawer","breakpoints","up","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","content","Profile","HoldingsTableRow","h","addingMemo","setAddingMemo","editorState","setEditorState","ticker_symbol","memo","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","HoldingsTable","fetchPortfolio","holdings","setHoldings","Portfolios","Subscribers","subs","setSubs","newSub","setNewSub","subscribers","format","values","sub","displayType","created_date","Admin","classes","mobileOpen","setMobileOpen","handleDrawerToggle","activeView","setActiveView","setEdit","fetchEditDetails","Views","icon","Person","TrendingUp","People","List","view","ListItem","button","selected","ListItemIcon","ListItemText","primary","document","CssBaseline","AppBar","elevation","Toolbar","edge","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b9918545.chunk.js","sourcesContent":["// Enter trade table.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst trade = {\n  tradeType: \"buy\" | \"sell\",\n  tradeDate: \"\",\n  costBasis: \"\",\n  quantity: \"\",\n  ticker: \"\",\n  priceSold: \"\",\n  percentageReturn: \"\", //calculated here\n};\n\nconst formValues = {\n  tradeDate: {\n    title: \"Trade Date (mm/dd/yyyy)\",\n    pl: \"mm/dd/yyyy\",\n    init: \"\",\n    required: true,\n  },\n  costBasis: {\n    title: \"Cost Basis (Total assets bought)\",\n    helperText: \"\",\n    pl: \"$10.01\",\n    init: \"\",\n    required: true,\n    number: true,\n  },\n  quantity: {\n    title: \"Quantity\",\n    pl: \"5\",\n    init: \"\",\n    required: true,\n    number: true,\n  },\n  ticker: { title: \"Ticker\", pl: \"AAPL\", init: \"\", required: true },\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nconst NewTradeRow = ({ userId, onSubmit }) => {\n  const editableTrades = Object.keys(formValues).reduce((res, key) => {\n    res[key] = formValues[key].init || \"\";\n    return res;\n  }, {});\n\n  const [editTrades, setEditTrades] = useState(editableTrades);\n  const [errorTrades, setErrorTrades] = useState(editableTrades);\n  const [generalError, setGeneralError] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setEditTrades({\n      ...editTrades,\n      [e.target.name]: e.target.value,\n    });\n    setErrorTrades({\n      ...errorTrades,\n      [e.target.name]: false,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    // Submit this information into the DB and push it into the existing trades\n    e.preventDefault();\n\n    // Check trades are filled out\n    let invalid = Object.entries(formValues)\n      .filter(([key, value]) => {\n        return value?.required && !editTrades[key];\n      })\n      .reduce((res, [k, v]) => {\n        res[k] = true;\n        return res;\n      }, {});\n    if (Object.keys(invalid).length > 0) {\n      setErrorTrades(invalid);\n      return;\n    }\n\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/insert/${userId}`, editTrades)\n      .then((res) => {\n        if (res.data.allow) {\n          onSubmit(editTrades);\n          // Clear trading entries\n          setEditTrades(editableTrades);\n        } else {\n          setGeneralError(res.data);\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          // check data\n          const err_msg = err.response.data.err;\n          if (!!err_msg?.form) {\n            setErrorTrades(\n              err_msg.form.reduce((res, filter) => {\n                const k = Object.keys(filter)[0];\n                const v = filter[k];\n                res[k] = v;\n                return res;\n              }, {})\n            );\n          } else {\n            setGeneralError(JSON.stringify(err_msg));\n          }\n        }\n        // something went wrong here\n      });\n  };\n\n  return (\n    <TableRow style={{ height: 50 }}>\n      {Object.entries(formValues).map(([key, value]) => {\n        return (\n          <TableCell key={key}>\n            <TextField\n              name={key}\n              onChange={handleInputChange}\n              placeholder={value.pl}\n              // label={value.pl}\n              value={editTrades[key]}\n              error={!!errorTrades[key]}\n              size=\"tiny\"\n              fullWidth\n              helperText={\n                !!errorTrades[key] ? errorTrades[key] : value?.helperText\n              }\n              required={value?.required}\n            />\n          </TableCell>\n        );\n      })}\n\n      <TableCell>\n        <Button\n          onClick={handleSubmit}\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n        >\n          Add trade\n        </Button>\n        {!!generalError && <>{generalError}</>}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const EnterTradesTable = ({ userId }) => {\n  const [trades, setTrades] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    // set trades from BE that were manually entered\n    axios.get(`${BASE_DOMAIN}/stonks/access/trades/${userId}`).then((res) => {\n      if (res.data.allow) {\n        setTrades(res.data.trades);\n      }\n    });\n  }, []);\n\n  const onSubmit = (editTrades) => {\n    // some logic to insert a trade here\n    setTrades([...trades, editTrades]);\n  };\n\n  // Add new trade row\n\n  return (\n    <Table\n      size=\"small\"\n      style={{ marginTop: theme.spacing(4), marginBottom: theme.spacing(4) }}\n    >\n      <TableHead>\n        <TableRow>\n          {Object.entries(formValues).map(([key, value]) => {\n            return <TableCell key={key}>{value.title}</TableCell>;\n          })}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {trades.map((t) => {\n          return (\n            <TableRow>\n              <TableCell>{t.tradeDate}</TableCell>\n              <TableCell>{t.costBasis}</TableCell>\n              <TableCell>{t.quantity}</TableCell>\n              <TableCell>{t.ticker}</TableCell>\n            </TableRow>\n          );\n        })}\n        <NewTradeRow onSubmit={onSubmit} userId={userId} />\n      </TableBody>\n    </Table>\n  );\n};\n","import React, { useState } from \"react\";\nimport MaskedInput from \"react-maskedinput\";\n\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport NumberFormat from \"react-number-format\";\n\nfunction WeightInput(props) {\n  return (\n    <NumberFormat\n      allowNegative={false}\n      decimalScale=\"1\"\n      customInput={TextField}\n      placeholder=\"10.0\"\n    />\n  );\n}\n\nclass TradeRow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value_ticker: this.props.ticker,\n      value_weight: this.props.weight,\n      errText: undefined,\n    };\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>\n          <TextField\n            value={this.state.value_ticker}\n            placeholder=\"AAPL/CASH\"\n            InputProps={{\n              style: {\n                color:\n                  this.state.value_ticker == \"\" ? undefined : this.props.color,\n              },\n            }}\n            inputProps={{\n                style: {\n                    textTransform: \"uppercase\"\n                },\n              }}\n            onChange={(e) => {\n              this.setState({ value_ticker: e.target.value });\n              this.props.handleEdit(\n                e.target.value.toUpperCase(),\n                parseFloat(this.state.value_weight),\n                this.props.index\n              );\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <NumberFormat\n            allowNegative={false}\n            decimalScale=\"1\"\n            customInput={TextField}\n            placeholder={this.props.weightPlace}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n            }}\n            onValueChange={(e) => {\n              console.log(\"handle change\", e.floatValue);\n              this.setState({ value_weight: e.floatValue });\n              this.props.handleEdit(\n                this.state.value_ticker,\n                e.floatValue,\n                this.props.index\n              );\n            }}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nexport default TradeRow;\n","export const piePallete = ['#0074D9', '#FF4136', '#2ECC40', '#FF851B', '#7FDBFF', '#B10DC9', '#FFDC00', '#001f3f', '#39CCCC', '#01FF70', '#85144b', '#F012BE', '#3D9970', '#111111', '#AAAAAA']","import React, { useState } from \"react\";\nimport TradeRow from \"./TradeRow\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { piePallete } from \"./colors\";\n\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\n// if (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nclass ManTradesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trades: [{ ticker: \"\", weight: null }],\n      total_weight: 0,\n      validPortfolio: false,\n    };\n  }\n\n  componentDidMount = () => {\n    console.log(this.props.editId);\n\n    axios.get(`${BASE_DOMAIN}/stonks/access/holdings`);\n  };\n\n  handleCreate = () => {\n    axios\n      .post(`${BASE_DOMAIN}/stonks/holdings/create`, {\n        user_id: this.props.userId,\n        edit_id: this.props.editId,\n        portfolio: this.state.trades.filter(\n          (t) => !isNaN(t.weight) && t.ticker != \"\"\n        ),\n      })\n      .then((res) => {\n        this.props.advanceStep && this.props.advanceStep(8);\n      })\n      .catch((err) => {\n        if (err.response) {\n          // check data\n          const errMsg = err.response.data.errMsg;\n          this.setState({ errMsg: errMsg });\n        }\n      });\n  };\n\n  handleHoldingEdit = (ticker, weight, index) => {\n    let validPortfolio = true;\n\n    const new_trades = this.state.trades;\n    if (index + 1 >= new_trades.length && ticker != \"\" && !isNaN(weight)) {\n      new_trades.push({ ticker: \"\", weight: null });\n    }\n\n    new_trades[index] = { weight: weight, ticker: ticker };\n\n    const total_weight = new_trades.reduce((sum, t) => {\n      return sum + (t.weight ? parseFloat(t.weight) : 0);\n    }, 0);\n    if (total_weight != 100) validPortfolio = false;\n\n    let errMsg = undefined;\n    if (\n      new_trades.reduce((isDup, t, i) => {\n        return isDup || (t.ticker == ticker && index != i && ticker != \"\");\n      }, false)\n    ) {\n      errMsg = \"Duplicate ticker: \".concat(ticker);\n      validPortfolio = false;\n    }\n\n    console.log(\"total weight\", total_weight);\n\n    this.setState({\n      trades: new_trades,\n      total_weight: total_weight,\n      errMsg: errMsg,\n      validPortfolio: validPortfolio,\n    });\n  };\n\n  render() {\n    var data = this.state.trades.map((t, index) => {\n      const weight = isNaN(t.weight) ? 0 : t.weight;\n\n      const slice = {\n        title: t.ticker,\n        value: weight,\n        color: piePallete[index % piePallete.length],\n      };\n      return slice;\n    });\n\n    return (\n      <div>\n        <Typography variant=\"h4\">\n          Manually Enter Your Holdings to Create Your Portfolio\n        </Typography>\n        <Typography style={{ color: \"gray\" }} variant=\"subtitle1\">\n          Ensure your percentages add up to 100%\n        </Typography>\n\n        <div\n          style={{ display: \"flex\", alignItems: \"flex-start\", marginTop: 20 }}\n        >\n          <div style={{ flexGrow: \"1\", marginLeft: 20 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticker</TableCell>\n                  <TableCell>Percent</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.trades.map((t, index) => {\n                  return (\n                    <TradeRow\n                      weightPlace={(100 - this.state.total_weight).toFixed(1)}\n                      handleEdit={this.handleHoldingEdit}\n                      ticker={t.ticker}\n                      weight={t.weight}\n                      index={index}\n                      color={piePallete[index % piePallete.length]}\n                    />\n                  );\n                })}\n              </TableBody>\n              {this.state.errMsg != undefined && (\n                <Typography\n                  variant=\"caption\"\n                  style={{\n                    color: \"red\",\n                    textAlign: \"left\",\n\n                    marginTop: 5,\n                  }}\n                >\n                  {this.state.errMsg}\n                </Typography>\n              )}\n            </Table>\n\n            <div\n              style={{\n                textAlign: \"right\",\n                marginTop: 5,\n              }}\n            >\n              Total:{\" \"}\n              <span\n                style={{\n                  color: this.state.total_weight <= 100 ? \"green\" : \"red\",\n                }}\n              >\n                {this.state.total_weight}%{\" \"}\n              </span>{\" \"}\n              of 100%\n            </div>\n\n            <Button\n              disabled={!this.state.validPortfolio}\n              onClick={this.handleCreate}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n                color: \"white\",\n                opacity: this.state.validPortfolio ? 1.0 : 0.5,\n                marginTop: 20,\n              }}\n            >\n              Create Portfolio\n            </Button>\n          </div>\n\n          <PieChart\n            style={{ flexGrow: \"1\" }}\n            radius={20}\n            lineWidth={15}\n            viewBoxSize={[100, 100]}\n            center={[50, 30]}\n            lengthAngle={Math.min((this.state.total_weight / 100) * 360, 360)}\n            data={data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManTradesTable;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { EnterTradesTable } from \"./EnterTradesTable\";\nimport ManTradesTable from \"./ManTradesTable\";\nimport {\n  ArrowBackIosRounded,\n  Link as LinkIcon,\n  Twitter,\n  YouTube,\n  Email,\n  Lock,\n  PlusOne,\n} from \"@material-ui/icons\";\n/*********\n * 3 Steps:ti\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  LinearProgress,\n  Link,\n  IconButton,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\n// if (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst ICONS = {\n  twitter: Twitter,\n  youtube: YouTube,\n  general: LinkIcon,\n  newsletter: Email,\n};\n\nconst LinksUpload = ({ links, setLinks }) => {\n  let alternateLinks = Object.keys(ICONS)\n    .map((o) => {\n      return { link_type: o, url: \"\" };\n    })\n    .filter((o) => !links.map((l) => l.link_type).includes(o.link_type));\n\n  const [newLink, setNewLink] = useState({ link_type: \"\", url: \"\" });\n  const handleSubmit = () => {\n    setLinks([...links, newLink]);\n    setNewLink({ link_type: \"\", url: \"\" });\n  };\n\n  const handleDelete = (index) => {\n    let templinks = links;\n    templinks.splice(index, 1);\n    setLinks(templinks);\n  };\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\"Link type (up to 4)\", \"URL\", \"\"].map((o) => (\n              <TableCell>{o}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {links.map((link, index) => {\n            const Icon = ICONS[link.link_type];\n            return (\n              <TableRow>\n                <TableCell>\n                  <Icon />\n                </TableCell>\n                <TableCell>{link.url}</TableCell>\n                <TableCell>\n                  <Button onClick={() => handleDelete(index)}>Delete</Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n          <TableRow>\n            <TableCell>\n              <Select\n                value={newLink.link_type}\n                onChange={(e) =>\n                  setNewLink({ ...newLink, link_type: e.target.value })\n                }\n              >\n                {alternateLinks.map((al) => {\n                  const DIcon = ICONS[al.link_type];\n                  return (\n                    <MenuItem value={al.link_type}>\n                      <DIcon />\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              <Typography variant=\"caption\">{newLink.link_type}</Typography>\n            </TableCell>\n            <TableCell>\n              <TextField\n                value={newLink.url}\n                onChange={(e) =>\n                  setNewLink({ ...newLink, url: e.target.value })\n                }\n              />\n            </TableCell>\n            <TableCell>\n              <Button onClick={handleSubmit}>Add</Button>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport const UserInfo = ({\n  advanceStep,\n  setUserId,\n  editId,\n  editDetails,\n  setEditDetails,\n  refresh,\n}) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const [title, setTitle] = useState(editDetails.title);\n  const [description, setDescription] = useState(editDetails.description);\n  const [link, setLink] = useState(editDetails.link);\n  const [subdomain, setSubdomain] = useState(editDetails.subdomain);\n  const [name, setName] = useState(editDetails.name);\n  const [email, setEmail] = useState(editDetails.email);\n  const [phone, setPhone] = useState(editDetails.phone);\n  const [showAmounts, setShowAmounts] = useState(editDetails.show_amounts);\n  const [userId, setDangerousUserId] = useState(\"\");\n  const [links, setLinks] = useState(editDetails.links);\n\n  useEffect(() => {\n    setTitle(editDetails.title);\n    setDescription(editDetails.description);\n    setLink(editDetails.link);\n    setSubdomain(editDetails.subdomain);\n    setName(editDetails.name);\n    setEmail(editDetails.email);\n    setPhone(editDetails.phone);\n    setShowAmounts(editDetails.show_amounts);\n    setLinks(editDetails.links);\n\n    //\n    if (!!editId) {\n      axios\n        .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: editId })\n        .then((res) => {\n          setDangerousUserId(res.data.user);\n        });\n    }\n  }, [editDetails]);\n\n  const add_plaid = editDetails.plaid_connected != !!editDetails.subdomain;\n\n  // TODO: avoid resubmitting every time here, and just get the user associated\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n        edit_id: editId,\n        links: links,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          // Update details via callback?\n          setEditDetails({\n            title: title,\n            description: description,\n            link: link,\n            subdomain: subdomain,\n            show_amounts: showAmounts ? \"yes\" : \"no\",\n            name: name,\n            email: email,\n            phone: phone,\n            plaid_connected: editDetails.plaid_connected,\n            editUrl: res.data.editUrl,\n            links: links,\n          });\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    if (!!editId) {\n      if (body.subdomain && body.subdomain == editDetails.subdomain) return;\n      else if (body.email && body.email === editDetails.email) return;\n      else if (body.phone && body.phone === editDetails.phone) return;\n    }\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  const subdomain_link = `https://${editDetails.subdomain}.withlaguna.com`;\n\n  return (\n    <>\n      <Typography variant=\"h4\">Account creation and configuration</Typography>\n      {!editId && (\n        <>\n          <Typography variant=\"h6\">\n            <Link href=\"/#/signin\">Sign in</Link>\n          </Typography>\n        </>\n      )}\n      {add_plaid && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"error\">\n            Your page is live, but your brokerage hasn't been connected yet\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Import your trades\n          </Button>\n        </div>\n      )}\n      {refresh && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"warning\">\n            Your brokerage credentials have expired. Please re-log them\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Reconnect\n          </Button>\n        </div>\n      )}\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            Used to customize your page :){\" \"}\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n          ></TextField>\n          <LinksUpload links={links} setLinks={setLinks} />\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              let temp = e.target.value;\n              temp = temp.replace(/\\W/g, \"\");\n              setSubdomain(temp);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e enter 'rob' if you want, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && (\n          <Typography color=\"red\">\n            Something went wrong :(. Please double check your information\n          </Typography>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          {!!editDetails.subdomain && (\n            <div>\n              <Typography>Check out your page: </Typography>\n              <Link href={subdomain_link}>{subdomain_link}</Link>\n            </div>\n          )}\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            {!!editId ? \"Update\" : \"Submit\"} Information\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nconst CSVUpload = ({ userId, advanceStep }) => {\n  const [showUpload, setShowUpload] = useState(false);\n  const [presignedPost, setPresignedPost] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadFile, setUploadFile] = useState({\n    preview: \"\",\n    raw: \"\",\n    name: \"\",\n  });\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      let name = e.target.value.split(\"\\\\\").pop();\n      setUploadFile({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n        name: name,\n      });\n      getSignedUrl(name);\n    }\n  };\n\n  const getSignedUrl = (name) => {\n    let fileName = name.replace(/[^\\w\\d_\\-.]+/gi, \"\");\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/sign/${userId}`, {\n        params: { file_name: fileName },\n      })\n      .then((res) => {\n        setPresignedPost(res.data);\n      });\n  };\n\n  const onUploadProgress = (e) => {\n    console.log(e);\n  };\n\n  const handleUpload = (e) => {\n    setUploading(true);\n    e.preventDefault();\n\n    console.log(presignedPost);\n    console.log(uploadFile);\n\n    const formData = new FormData();\n    Object.keys(presignedPost.fields).forEach((k) => {\n      const v = presignedPost.fields[k];\n      formData.append(k, v);\n    });\n    formData.append(\"file\", uploadFile.raw);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = parseInt(\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        );\n        // Update state here\n        onUploadProgress(progress);\n      },\n    };\n\n    axios\n      .post(`${presignedPost.url}`, formData, config)\n      .then((res) => {\n        advanceStep(3);\n        axios\n          .get(`${BASE_DOMAIN}/stonks/access/uploaded/${userId}`)\n          .then((res) => {\n            console.log(res);\n          })\n          .catch(console.error(\"Did not set manual trade issue\"));\n      })\n      .catch(console.error(\"Uploading problemo\"))\n      .finally(setUploading(false));\n  };\n\n  return (\n    <>\n      {!uploadFile.preview ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            Upload a screenshot of your positions\n            <input type=\"file\" hidden onChange={handleChange} />\n          </Button>\n          <Typography variant=\"caption\">\n            We'll automatically process the data for you\n          </Typography>\n        </div>\n      ) : uploading ? (\n        <CircularProgress />\n      ) : (\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n            color: \"white\",\n            fontWeight: 800,\n          }}\n          onClick={handleUpload}\n        >\n          Upload {uploadFile.name}\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh, title }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const theme = useTheme();\n\n  const [plaidStatus, setPlaidStatus] = useState([]);\n\n  const getPlaidStatus = () => {\n    // ALWAYS GET PLAID STATUS FROM THE API\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_status`)\n      .then((res) => {\n        setPlaidStatus(res.data?.brokers || []);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n\n    getPlaidStatus();\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep(3);\n      return;\n    }\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep(3);\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  const handleManualEntry = () => {\n    advanceStep(7);\n  };\n\n  const handleFileUpload = () => {\n    advanceStep(5);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in brokerage connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError || !title) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: theme.spacing(2),\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            maxWidth: \"400px\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              open();\n            }}\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            <b style={{ marginRight: \"4px\" }}>Auto</b> Connect brokerage\n          </Button>\n          {plaidStatus.map((status) => (\n            <Alert style={{ marginTop: theme.spacing(2) }} severity=\"warning\">\n              {status}\n            </Alert>\n          ))}\n        </div>\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleFileUpload}\n        >\n          <b style={{ marginRight: \"4px\" }}>EASIEST</b> Upload a screenshot of\n          your positions\n        </Button>\n        <Typography variant=\"caption\">\n          We'll automatically process the data for you\n        </Typography>\n        {/* <CSVUpload userId={userId} advanceStep={advanceStep} /> */}\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleManualEntry}\n        >\n          <b style={{ marginRight: \"4px\" }}>Manual</b> Enter trades\n        </Button>\n      </div>\n\n      <>\n        {showTable && (\n          <>\n            <ManTradesTable userId={userId} />\n            <Button\n              onClick={() => {\n                advanceStep();\n              }}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #729FBF, #E0CDE1)\",\n                color: \"white\",\n              }}\n            >\n              CONTINUE\n            </Button>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"p1\">\n        We've gotten reports that our emails are ending in your spam box. Please\n        double-check there as well after ~5 min\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst Finished = ({ displayDetail }) => {\n  const { width, height } = useWindowSize();\n  console.log(\"in finish with display\", displayDetail);\n  let REDIRECT_BASE =\n    process.env.NODE_ENV === \"development\" ? \"http://\" : \"https://\";\n  let REDIRECT_DOMAIN =\n    process.env.NODE_ENV === \"development\"\n      ? \".localhost:4200/\"\n      : \".withlaguna.com/\";\n\n  const pageUrl = `${REDIRECT_BASE}${displayDetail.subdomain}${REDIRECT_DOMAIN}`;\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Congrats {displayDetail.name}!</Typography>\n      <Typography variant=\"h5\">Your page is ready at</Typography>\n      <Typography>\n        <Link href={pageUrl}>{displayDetail.subdomain}.withLaguna.com</Link>\n      </Typography>\n\n      <Typography style={{ marginTop: 30 }}>\n        You can edit your profile at <br />\n        <Link href={displayDetail.editUrl}>{displayDetail.editUrl}</Link>\n      </Typography>\n\n      <Button\n        href={pageUrl}\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n          marginTop: 50,\n        }}\n      >\n        View Page\n      </Button>\n    </>\n  );\n};\n\nconst Update = () => {\n  const { width, height } = useWindowSize();\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Thanks for updating your page :)</Typography>\n      <br />\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst InstructiveFileUpload = ({ userId, advanceStep }) => {\n  return (\n    <>\n      <img width=\"800px\" src=\"/upload_robinhood.png\" />\n      <CSVUpload userId={userId} advanceStep={advanceStep} />\n    </>\n  );\n};\n\n// const UploadTrades = ({ advanceStep, setShowUpload, userId }) => {\n\n// };\n\nconst SignIn = ({}) => {\n  const [success, setSuccess] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const theme = useTheme();\n\n  const handleSubmit = () => {\n    setSubmitting(true);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/send`, { params: { email: email } })\n      .then(() => {\n        setSuccess(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.err);\n        } else {\n          setError(\"Please email support@withlaguna.com\");\n        }\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div\n      style={{ marginLeft: theme.spacing(12), marginRight: theme.spacing(12) }}\n    >\n      <Typography variant=\"h5\">\n        Enter your email address to get your sign-in link\n      </Typography>\n      <br />\n      <br />\n      {!success && (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            label=\"Email\"\n            error={!!error}\n            helperText={error}\n          />\n          <br />\n          {submitting && <LinearProgress />}\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </div>\n      )}\n      {!!success && (\n        <Typography varian=\"body\">\n          You've been sent an email. Click it to access your admin page\n        </Typography>\n      )}\n      <br />\n      <br />\n      <Typography variant=\"caption\">\n        Having an issue? <a href=\"mailto:team@withlaguna.com\">Contact us</a>\n      </Typography>\n    </div>\n  );\n};\n\nexport const fetchEditDetails = (edit_id, setEdit) => {\n  axios\n    .get(`${BASE_DOMAIN}/stonks/access/edit_info`, {\n      params: {\n        edit_id: edit_id,\n      },\n    })\n    .then((res) => {\n      let editable = Object.assign({}, res.data);\n      editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n      setEdit(editable);\n    })\n    .catch((err) => {\n      setEdit(\"err\");\n    });\n};\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const [editId, setEditId] = useState();\n  const [err, setErr] = useState(false);\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n    links: [],\n  });\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let hash = window.location.hash;\n    if (hash == \"#/signin\") {\n      setStep(6);\n    }\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setRefresh(true);\n      // setUserId(plaid_refresh_id);\n    }\n    let plaid_login = params.get(\"plaid_login\");\n    let edit_id = params.get(\"edit\");\n    if (!!edit_id) {\n      setStep(1);\n      setEditId(edit_id);\n\n      if (!!plaid_login) {\n        axios\n          .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: edit_id })\n          .then((res) => {\n            setUserId(res.data.user);\n          });\n        setStep(2);\n      }\n\n      // fetch initial props\n      axios\n        .get(`${BASE_DOMAIN}/stonks/access/edit_info`, {\n          params: {\n            edit_id: edit_id,\n          },\n        })\n        .then((res) => {\n          let editable = Object.assign({}, res.data);\n          editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n          setEditDetails(editable);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErr(true);\n        });\n    }\n  }, []);\n\n  function renderStep() {\n    if (err) {\n      return <div>Something went wrong with laguna</div>;\n    } else {\n      if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n      else if (step === 1)\n        return (\n          <UserInfo\n            advanceStep={() =>\n              editDetails.plaid_connected && !refresh ? \"\" : setStep(2)\n            }\n            setUserId={setUserId}\n            refresh={refresh}\n            editId={editId}\n            editDetails={editDetails}\n            setEditDetails={setEditDetails}\n          />\n        );\n      else if (step === 2)\n        return (\n          <PlaidInfo\n            userId={userId}\n            advanceStep={setStep}\n            refresh={refresh}\n            title={editDetails.title}\n          />\n        );\n      else if (step === 3) return <Wait />;\n      else if (step === 4) return <Update />;\n      else if (step === 5)\n        return <InstructiveFileUpload userId={userId} advanceStep={setStep} />;\n      else if (step == 6) return <SignIn />;\n      else if (step == 7)\n        return <ManTradesTable userId={userId} advanceStep={setStep} />;\n      else if (step == 8) return <Finished displayDetail={editDetails} />;\n      else return <></>;\n    }\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n      className=\"App\"\n    >\n      <Grid item xs={11} sm={8} md={6}>\n        {(step == 7 || step == 5) && (\n          <IconButton\n            size=\"small\"\n            style={{ float: \"left\", marginTop: theme.spacing(3) }}\n            onClick={() => setStep(2)}\n          >\n            <ArrowBackIosRounded />\n            Back\n          </IconButton>\n        )}\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Typography,\n  Grid,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  TextField,\n} from \"@material-ui/core\";\nimport { UserInfo, fetchEditDetails } from \"../AccessForm\";\nimport { Person, TrendingUp, People } from \"@material-ui/icons\";\nimport ManTradesTable from \"../ManTradesTable\";\nimport axios from \"axios\";\nimport NumberFormat from \"react-number-format\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst drawerWidth = 200;\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\n// if (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst Profile = ({ editId, editDetails, setEditDetails }) => {\n  return <UserInfo editId={editId} editDetails={editDetails} setEditDetails={setEditDetails} />;\n};\n\nconst HoldingsTableRow = ({ h }) => {\n  const [addingMemo, setAddingMemo] = useState(false);\n  const [editorState, setEditorState] = useState();\n\n  const onEditorStateChange = (e) => {\n    setEditorState(e);\n  }\n  return (\n    <>\n      <TableRow>\n        <TableCell>{h.ticker_symbol}</TableCell>\n        <TableCell>{h.memo}</TableCell>\n        <TableCell>\n          <Button onClick={() => setAddingMemo(!addingMemo)}>Edit memo</Button>\n        </TableCell>\n      </TableRow>\n      {addingMemo && (\n        <TableRow>\n          <Editor\n            editorState={editorState}\n            toolbarClassName=\"toolbarClassName\"\n            wrapperClassName=\"wrapperClassName\"\n            editorClassName=\"editorClassName\"\n            onEditorStateChange={onEditorStateChange}\n          />\n        </TableRow>\n      )}\n    </>\n  );\n};\n\nconst HoldingsTable = ({ editId, subdomain }) => {\n  useEffect(() => {\n    fetchPortfolio();\n  }, [subdomain]);\n\n  const [holdings, setHoldings] = useState([]);\n  const fetchPortfolio = () => {\n    axios.get(`${BASE_DOMAIN}/stonks/holdings/${subdomain}`).then((res) => {\n      setHoldings(res.data.holdings);\n    });\n  };\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\"Ticker\", \"Memo\"].map((o) => {\n              <TableCell>{o}</TableCell>;\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {holdings.map((h) => {\n            return <HoldingsTableRow h={h} editId={editId} />;\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nconst Portfolios = ({ editId, subdomain }) => {\n  return (\n    <>\n      {subdomain && <HoldingsTable editId={editId} subdomain={subdomain} />}\n      <ManTradesTable editId={editId} />\n    </>\n  );\n};\n\nconst Subscribers = ({ editId }) => {\n  const [subs, setSubs] = useState([]);\n  const [newSub, setNewSub] = useState({ name: \"\", phone: \"\" });\n  const [err, setErr] = useState(\"\");\n  useEffect(() => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/subscribers`, {\n        params: { edit_id: editId },\n      })\n      .then((res) => {\n        setSubs(res.data.subscribers);\n      });\n  }, []);\n\n  const handleSubmit = () => {\n    axios\n      .post(`${BASE_DOMAIN}/stonks/submit`, {\n        ...newSub,\n        edit_id: editId,\n      })\n      .then(() => {\n        setSubs([...subs, newSub]);\n        setNewSub({ name: \"\", phone: \"\" });\n      })\n      .catch((error) => {\n        if (error.response) {\n          setErr(error.response.data.err);\n        } else {\n          setErr(\"Please email support@withlaguna.com\");\n        }\n      });\n  };\n  return (\n    <>\n      <Typography variant=\"h5\">\n        {!!subs.length ? subs.length : 0} subscribers\n      </Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\"Name\", \"Phone\", \"Date added\"].map((o) => (\n              <TableCell>{o}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <TextField\n                label=\"name\"\n                value={newSub.name}\n                onChange={(e) =>\n                  setNewSub(Object.assign({}, newSub, { name: e.target.value }))\n                }\n              />\n            </TableCell>\n            <TableCell>\n              <NumberFormat\n                value={newSub.phone}\n                format=\"(###) ###-####\"\n                customInput={TextField}\n                onValueChange={(values) => {\n                  const { value } = values;\n                  setNewSub(Object.assign({}, newSub, { phone: value }));\n                }}\n                placeholder=\"(555)-123-4567\"\n                label=\"phone\"\n                helperText={!!err ? err : \"\"}\n                err={!!err}\n              />\n            </TableCell>\n            <TableCell>\n              <Button\n                style={{\n                  backgroundImage:\n                    \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n                  color: \"white\",\n                }}\n                onClick={handleSubmit}\n              >\n                Add new sub\n              </Button>\n            </TableCell>\n          </TableRow>\n          {subs.map((sub) => {\n            return (\n              <TableRow>\n                <TableCell>{sub.name}</TableCell>\n                <TableCell>\n                  <NumberFormat\n                    displayType=\"text\"\n                    value={sub.phone}\n                    format=\"(###) ###-####\"\n                  ></NumberFormat>\n                </TableCell>\n                <TableCell>{sub.created_date}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nfunction Admin(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const [activeView, setActiveView] = useState(0);\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n    links: []\n  });\n\n  let params = new URLSearchParams(props.location.search);\n  let edit_id = params.get(\"edit\");\n\n  useEffect(() => {\n    fetchEditDetails(edit_id, (e) => {\n      console.log(e);\n      setEditDetails(e);\n    });\n  }, []);\n\n  if (!edit_id) {\n    return \"Access not allowed. If you believe this was in error please contact support\";\n  }\n\n  const Views = [\n    {\n      title: \"My profile\",\n      component: <Profile editId={edit_id} editDetails={editDetails} setEditDetails={setEditDetails} />,\n      icon: <Person />,\n    },\n    {\n      title: \"Portfolios\",\n      component: (\n        <Portfolios editId={edit_id} subdomain={editDetails.subdomain} />\n      ),\n      icon: <TrendingUp />,\n    },\n    {\n      title: \"Subscribers\",\n      component: <Subscribers editId={edit_id} />,\n      icon: <People />,\n    },\n  ];\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <List>\n        {Views.map((view, index) => (\n          <ListItem\n            button\n            key={view.title}\n            onClick={() => setActiveView(index)}\n            selected={activeView == index}\n          >\n            <ListItemIcon>{view.icon}</ListItemIcon>\n            <ListItemText primary={view.title} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Grid container>\n      <Grid item>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            color=\"transparent\"\n            elevation={0}\n            position=\"fixed\"\n            className={classes.appBar}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            {Views[activeView].component}\n          </main>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Admin;\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { AccessForm } from \"./AccessForm.js\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Admin from \"./admin/Admin\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\n// function App() {\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <div className=\"App\">\n//         <AccessForm/>\n//       </div>\n//     </ThemeProvider>\n//   );\n// }\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={AccessForm} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route component={() => <div>404 Not found 1</div>} />\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}