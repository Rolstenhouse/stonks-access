{"version":3,"sources":["AccessForm.js","App.js","reportWebVitals.js","index.js"],"names":["AccessCode","advanceStep","useState","input","setInput","error","setError","Typography","variant","TextField","label","value","onChange","e","target","placeholder","Button","onClick","axios","get","then","res","catch","UserInfo","PlaidInfo","Wait","AccessForm","step","setStep","Grid","container","justify","item","xs","sm","Paper","theme","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAaMA,EAAa,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACZC,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,OAEZF,oBAAS,GAFG,mBAE/BG,EAF+B,KAExBC,EAFwB,KAgBtC,OACE,qCACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0CACA,cAACC,EAAA,EAAD,CACEC,MAAM,oBACNL,MAAOA,EACPM,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOH,QACnCI,YAAY,gBAEd,cAACC,EAAA,EAAD,CAAQC,QAtBS,SAACJ,GACpBP,GAAS,GACTY,IACGC,IADH,mDACmDhB,IAChDiB,MAAK,SAACC,GACLpB,OAEDqB,OAAM,WACLhB,GAAS,OAcX,uBAKAiB,EAAW,aAEXC,EAAY,aAEZC,EAAO,aAEAC,EAAa,WAAO,IAAD,EACNxB,mBAAS,GADH,mBACvByB,EADuB,KACjBC,EADiB,KAU9B,OACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAxB,SACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACC,EAAA,EAAD,UATQ,GAARR,EAAkB,cAAC,EAAD,CAAY1B,YAAa,kBAAM2B,EAAQ,MAC5C,GAARD,EAAkB,cAACJ,EAAD,IACV,GAARI,EAAkB,cAACH,EAAD,IACV,GAARG,EAAkB,cAACF,EAAD,SAAtB,SCnDHW,EAAQC,YAAe,CAC3BC,WAAY,CACVC,WAAY,CACV,SACA,SACA,mBACA,QACA,cACAC,KAAK,MAETC,QAAS,CACPC,UAAW,CACTC,KAAM,cAeGC,MAVf,WACE,OACE,cAACC,EAAA,EAAD,CAAeT,MAAOA,EAAtB,SACE,qBAAKU,UAAU,MAAf,SACE,cAAC,EAAD,SCfOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67b99ab4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n/*********\n * 3 Steps:\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport { Grid, Paper, TextField, Button, Typography } from \"@material-ui/core\";\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/${input}`)\n      .then((res) => {\n        advanceStep();\n      })\n      .catch(() => {\n        setError(true);\n      });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <TextField\n        label=\"Early Access Code\"\n        error={error}\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"OPEN SESAME\"\n      />\n      <Button onClick={handleSubmit}>Enter</Button>\n    </>\n  );\n};\n\nconst UserInfo = () => {};\n\nconst PlaidInfo = () => {};\n\nconst Wait = () => {};\n\nexport const AccessForm = () => {\n  const [step, setStep] = useState(0);\n\n  function renderStep() {\n    if (step == 0) return <AccessCode advanceStep={() => setStep(1)} />;\n    else if (step == 1) return <UserInfo />;\n    else if (step == 2) return <PlaidInfo />;\n    else if (step == 3) return <Wait />;\n  }\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={11} sm={8}>\n        <Paper>{renderStep()}</Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core\"\nimport {AccessForm} from \"./AccessForm.js\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AccessForm/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}