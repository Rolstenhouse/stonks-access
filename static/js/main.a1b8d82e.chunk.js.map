{"version":3,"sources":["AccessForm.js","App.js","reportWebVitals.js","index.js"],"names":["AccessCode","advanceStep","useState","input","setInput","error","setError","theme","useTheme","handleFailure","Lock","Typography","variant","style","display","flexDirection","alignItems","justifyContent","TextField","label","value","onChange","e","target","placeholder","helperText","Button","backgroundImage","color","marginLeft","spacing","onClick","axios","get","then","res","data","allow","catch","UserInfo","setUserId","editId","editDetails","title","setTitle","description","setDescription","link","setLink","subdomain","setSubdomain","name","setName","email","setEmail","phone","setPhone","show_amounts","showAmounts","setShowAmounts","useEffect","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","params","Paper","padding","marginBottom","Link","href","fullWidth","onBlur","FormControl","component","margin","size","textAlign","marginTop","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","post","edit","id","PlaidInfo","userId","refresh","token","setToken","presignedPost","setPresignedPost","uploading","setUploading","preview","raw","uploadFile","setUploadFile","link_token","config","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","getSignedUrl","fileName","replace","file_name","disabled","marginRight","CircularProgress","fontWeight","preventDefault","console","log","formData","FormData","Object","keys","fields","forEach","k","v","append","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","finally","type","hidden","files","length","split","pop","URL","createObjectURL","Wait","useWindowSize","width","height","Update","AccessForm","step","setStep","setRefresh","setEditId","setEditDetails","search","window","location","URLSearchParams","plaid_refresh_id","plaid_login_id","edit_id","editable","assign","err","Grid","container","justify","minHeight","item","xs","sm","md","paddingTop","paddingBottom","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1b8d82e.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { Lock } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\n\n/*********\n * 3 Steps:\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Link,\n} from \"@material-ui/core\";\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst UserInfo = ({ advanceStep, setUserId, editId, editDetails }) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const [title, setTitle] = useState(editDetails.title);\n  const [description, setDescription] = useState(editDetails.description);\n  const [link, setLink] = useState(editDetails.link);\n  const [subdomain, setSubdomain] = useState(editDetails.subdomain);\n  const [name, setName] = useState(editDetails.name);\n  const [email, setEmail] = useState(editDetails.email);\n  const [phone, setPhone] = useState(editDetails.phone);\n  const [showAmounts, setShowAmounts] = useState(editDetails.show_amounts);\n\n  useEffect(() => {\n    setTitle(editDetails.title);\n    setDescription(editDetails.description);\n    setLink(editDetails.link);\n    setSubdomain(editDetails.subdomain);\n    setName(editDetails.name);\n    setEmail(editDetails.email);\n    setPhone(editDetails.phone);\n    setShowAmounts(editDetails.show_amounts);\n  }, [editDetails]);\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`https://api.withlaguna.com/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n        edit: editId,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    if (!!editId) {\n      if (body.subdomain && body.subdomain == editDetails.subdomain) return;\n      else if (body.email && body.email === editDetails.email) return;\n      else if (body.phone && body.phone === editDetails.phone) return;\n    }\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Account creation and configuration</Typography>\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            Used to customize your page :){\" \"}\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            label=\"Personal Bio Link (optional)\"\n            helperText=\"Twitter handle, website, Linkedin, etc. Write as https://withterra.com\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              setSubdomain(e.target.value);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e enter 'rob' if you want, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && (\n          <Typography color=\"red\">\n            Something went wrong :(. Please double check your information\n          </Typography>\n        )}\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n          onClick={handleSubmit}\n        >\n          Submit Information\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const [showUpload, setShowUpload] = useState(false);\n  const [presignedPost, setPresignedPost] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadFile, setUploadFile] = useState({\n    preview: \"\",\n    raw: \"\",\n    name: \"\",\n  });\n\n  useEffect(() => {\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep();\n      return;\n    }\n    axios\n      .post(`https://api.withlaguna.com/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      let name = e.target.value.split(\"\\\\\").pop();\n      setUploadFile({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n        name: name,\n      });\n      getSignedUrl(name);\n    }\n  };\n\n  const getSignedUrl = (name) => {\n    let fileName = name.replace(/[^\\w\\d_\\-.]+/ig, '')\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/sign/${userId}`, {\n        file_name: fileName,\n      })\n      .then((res) => {\n        setPresignedPost(res.data);\n      });\n  };\n\n  const onUploadProgress = (e) => {\n    console.log(e);\n  };\n\n  const handleUpload = (e) => {\n    setUploading(true);\n    e.preventDefault();\n\n    console.log(presignedPost);\n    console.log(uploadFile);\n\n    const formData = new FormData();\n    Object.keys(presignedPost.fields).forEach((k) => {\n      const v = presignedPost.fields[k];\n      formData.append(k, v);\n    });\n    formData.append(\"file\", uploadFile.raw);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = parseInt(\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        );\n        // Update state here\n        onUploadProgress(progress);\n      },\n    };\n\n    axios\n      .post(`${presignedPost.url}`, formData, config)\n      .then((res) => {\n        advanceStep();\n      })\n      .catch(console.error(\"Uploading problemo\"))\n      .finally(setUploading(false));\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in banking connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: theme.spacing(2),\n          alignItems: \"center\",\n        }}\n      >\n        <Button\n          onClick={() => {\n            open();\n          }}\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n          disabled={!!uploadFile.preview}\n        >\n          Connect bank account\n        </Button>\n        <div style={{marginLeft: theme.spacing(2), marginRight: theme.spacing(2)}}>or</div>\n        {!uploadFile.preview ? (\n          <Button\n            component=\"label\"\n            style={{ color: \"linear-gradient(to top right, #A01A7D, #EC4067)\" }}\n          >\n            Manually upload trades(CSV)\n            <input type=\"file\" hidden onChange={handleChange} />\n          </Button>\n        ) : uploading ? (\n          <CircularProgress />\n        ) : (\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n              fontWeight: 800,\n            }}\n            onClick={handleUpload}\n          >\n            Upload {uploadFile.name}\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"p1\">\n        We've gotten reports that our emails are ending in your spam box. Please\n        double-check there as well after ~5 min\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst Update = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Thanks for updating your page :)</Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\n// const UploadTrades = ({ advanceStep, setShowUpload, userId }) => {\n\n// };\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const [editId, setEditId] = useState();\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setStep(2);\n      setRefresh(true);\n      setUserId(plaid_refresh_id);\n    }\n    let plaid_login_id = params.get(\"plaid_login\");\n    if (!!plaid_login_id) {\n      setStep(2);\n      setUserId(plaid_login_id);\n    }\n    let edit_id = params.get(\"edit\");\n    if (!!edit_id) {\n      setStep(1);\n      setEditId(edit_id);\n\n      // fetch initial props\n      axios\n        .get(`https://api.withlaguna.com/stonks/access/edit_info`, {\n          params: {\n            edit: edit_id,\n          },\n        })\n        .then((res) => {\n          let editable = Object.assign({}, res.data);\n          editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n          console.log(editable);\n          setEditDetails(editable);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, []);\n\n  function renderStep() {\n    if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n    else if (step === 1)\n      return (\n        <UserInfo\n          advanceStep={() => (!!editId ? setStep(4) : setStep(2))}\n          setUserId={setUserId}\n          editId={editId}\n          editDetails={editDetails}\n        />\n      );\n    else if (step === 2)\n      return (\n        <PlaidInfo\n          userId={userId}\n          advanceStep={() => setStep(3)}\n          refresh={refresh}\n        />\n      );\n    else if (step === 3) return <Wait />;\n    else if (step === 4) return <Update />;\n    else return <></>;\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n    >\n      <Grid item xs={11} sm={8} md={6}>\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core\"\nimport {AccessForm} from \"./AccessForm.js\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AccessForm/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}