{"version":3,"sources":["EnterTradesTable.js","TradeRow.js","colors.js","ManTradesTable.js","AccessForm.js","admin/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["TradeRow","props","TableRow","TableCell","TextField","value","this","ticker","placeholder","InputProps","style","color","undefined","inputProps","textTransform","onChange","e","handleEdit","target","toUpperCase","parseFloat","weight","index","allowNegative","decimalScale","customInput","weightPlace","endAdornment","InputAdornment","position","onValueChange","floatValue","React","Component","piePallete","colors","BASE_DOMAIN","ManTradesTable","componentDidMount","axios","get","params","edit_id","editId","then","res","setState","trades","data","holdings","calculateWeight","handleCreate","post","user_id","userId","portfolio","state","filter","t","isNaN","advanceStep","catch","err","response","errMsg","validPortfolio","total_weight","reduce","sum","handleHoldingEdit","new_trades","length","push","isDup","i","concat","map","title","Typography","variant","display","alignItems","marginTop","flexGrow","marginLeft","Table","TableHead","backgroundColor","o","TableBody","toFixed","textAlign","Button","disabled","onClick","backgroundImage","opacity","radius","lineWidth","viewBoxSize","center","lengthAngle","Math","min","ICONS","twitter","Twitter","youtube","YouTube","general","LinkIcon","newsletter","Email","LinksUpload","links","setLinks","alternateLinks","Object","keys","link_type","url","l","includes","useState","newLink","setNewLink","link","Icon","templinks","splice","handleDelete","Select","al","DIcon","MenuItem","AccessCode","input","setInput","error","setError","theme","useTheme","handleFailure","Lock","flexDirection","justifyContent","label","helperText","spacing","allow","UserInfo","onFormSubmit","setUserId","editDetails","setEditDetails","refresh","setTitle","description","setDescription","setLink","subdomain","setSubdomain","name","setName","email","setEmail","phone","setPhone","show_amounts","showAmounts","setShowAmounts","setDangerousUserId","useEffect","user","add_plaid","plaid_connected","handleSubmit","id","editUrl","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","subdomain_link","marginBottom","href","padding","Alert","severity","Paper","fullWidth","temp","replace","onBlur","FormControl","component","margin","size","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","CSVUpload","presignedPost","setPresignedPost","uploading","setUploading","preview","raw","uploadFile","setUploadFile","getSignedUrl","fileName","file_name","CircularProgress","fontWeight","preventDefault","console","log","formData","FormData","fields","forEach","k","v","append","config","headers","onUploadProgress","progressEvent","parseInt","round","loaded","total","finally","type","hidden","files","split","pop","URL","createObjectURL","PlaidInfo","token","setToken","showTable","plaidStatus","setPlaidStatus","link_token","brokers","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","maxWidth","marginRight","status","Wait","useWindowSize","width","height","Finished","displayDetail","pageUrl","Update","InstructiveFileUpload","src","SignIn","success","setSuccess","submitting","setSubmitting","LinearProgress","varian","AccessForm","step","setStep","setRefresh","setEditId","setErr","window","location","hash","search","URLSearchParams","plaid_login","editable","assign","Grid","container","justify","minHeight","className","item","xs","sm","md","IconButton","float","ArrowBackIosRounded","paddingTop","paddingBottom","drawerWidth","useStyles","makeStyles","root","drawer","breakpoints","up","flexShrink","appBar","menuButton","toolbar","mixins","drawerPaper","content","Profile","handleClose","event","reason","Snackbar","autoHideDuration","onClose","HoldingsTableRow","h","memoHtml","memo","blocksFromHTML","convertFromHTML","initialContentState","ContentState","createFromBlockArray","contentBlocks","entityMap","addingMemo","setAddingMemo","EditorState","createWithContent","editorState","setEditorState","ticker_symbol","renderHTML","holding_id","draftToHtml","convertToRaw","getCurrentContent","plaid_security_id","colSpan","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","onContentStateChange","HoldingsTable","fetchPortfolio","setHoldings","Portfolios","Subscribers","subs","setSubs","newSub","setNewSub","subscribers","format","values","sub","displayType","created_date","Admin","classes","mobileOpen","setMobileOpen","handleDrawerToggle","activeView","setActiveView","setEdit","fetchEditDetails","Views","icon","Person","TrendingUp","People","List","view","ListItem","button","selected","ListItemIcon","ListItemText","primary","document","CssBaseline","AppBar","elevation","Toolbar","edge","Menu","Hidden","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","xsDown","createMuiTheme","typography","fontFamily","join","h4","h5","h6","b","palette","secondary","main","overrides","MuiTextField","App","ThemeProvider","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bbc12446.chunk.js","sourcesContent":["// Enter trade table.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst trade = {\n  tradeType: \"buy\" | \"sell\",\n  tradeDate: \"\",\n  costBasis: \"\",\n  quantity: \"\",\n  ticker: \"\",\n  priceSold: \"\",\n  percentageReturn: \"\", //calculated here\n};\n\nconst formValues = {\n  tradeDate: {\n    title: \"Trade Date (mm/dd/yyyy)\",\n    pl: \"mm/dd/yyyy\",\n    init: \"\",\n    required: true,\n  },\n  costBasis: {\n    title: \"Cost Basis (Total assets bought)\",\n    helperText: \"\",\n    pl: \"$10.01\",\n    init: \"\",\n    required: true,\n    number: true,\n  },\n  quantity: {\n    title: \"Quantity\",\n    pl: \"5\",\n    init: \"\",\n    required: true,\n    number: true,\n  },\n  ticker: { title: \"Ticker\", pl: \"AAPL\", init: \"\", required: true },\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nconst NewTradeRow = ({ userId, onSubmit }) => {\n  const editableTrades = Object.keys(formValues).reduce((res, key) => {\n    res[key] = formValues[key].init || \"\";\n    return res;\n  }, {});\n\n  const [editTrades, setEditTrades] = useState(editableTrades);\n  const [errorTrades, setErrorTrades] = useState(editableTrades);\n  const [generalError, setGeneralError] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setEditTrades({\n      ...editTrades,\n      [e.target.name]: e.target.value,\n    });\n    setErrorTrades({\n      ...errorTrades,\n      [e.target.name]: false,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    // Submit this information into the DB and push it into the existing trades\n    e.preventDefault();\n\n    // Check trades are filled out\n    let invalid = Object.entries(formValues)\n      .filter(([key, value]) => {\n        return value?.required && !editTrades[key];\n      })\n      .reduce((res, [k, v]) => {\n        res[k] = true;\n        return res;\n      }, {});\n    if (Object.keys(invalid).length > 0) {\n      setErrorTrades(invalid);\n      return;\n    }\n\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/insert/${userId}`, editTrades)\n      .then((res) => {\n        if (res.data.allow) {\n          onSubmit(editTrades);\n          // Clear trading entries\n          setEditTrades(editableTrades);\n        } else {\n          setGeneralError(res.data);\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          // check data\n          const err_msg = err.response.data.err;\n          if (!!err_msg?.form) {\n            setErrorTrades(\n              err_msg.form.reduce((res, filter) => {\n                const k = Object.keys(filter)[0];\n                const v = filter[k];\n                res[k] = v;\n                return res;\n              }, {})\n            );\n          } else {\n            setGeneralError(JSON.stringify(err_msg));\n          }\n        }\n        // something went wrong here\n      });\n  };\n\n  return (\n    <TableRow style={{ height: 50 }}>\n      {Object.entries(formValues).map(([key, value]) => {\n        return (\n          <TableCell key={key}>\n            <TextField\n              name={key}\n              onChange={handleInputChange}\n              placeholder={value.pl}\n              // label={value.pl}\n              value={editTrades[key]}\n              error={!!errorTrades[key]}\n              size=\"tiny\"\n              fullWidth\n              helperText={\n                !!errorTrades[key] ? errorTrades[key] : value?.helperText\n              }\n              required={value?.required}\n            />\n          </TableCell>\n        );\n      })}\n\n      <TableCell>\n        <Button\n          onClick={handleSubmit}\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n        >\n          Add trade\n        </Button>\n        {!!generalError && <>{generalError}</>}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const EnterTradesTable = ({ userId }) => {\n  const [trades, setTrades] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    // set trades from BE that were manually entered\n    axios.get(`${BASE_DOMAIN}/stonks/access/trades/${userId}`).then((res) => {\n      if (res.data.allow) {\n        setTrades(res.data.trades);\n      }\n    });\n  }, []);\n\n  const onSubmit = (editTrades) => {\n    // some logic to insert a trade here\n    setTrades([...trades, editTrades]);\n  };\n\n  // Add new trade row\n\n  return (\n    <Table\n      size=\"small\"\n      style={{ marginTop: theme.spacing(4), marginBottom: theme.spacing(4) }}\n    >\n      <TableHead>\n        <TableRow>\n          {Object.entries(formValues).map(([key, value]) => {\n            return <TableCell key={key}>{value.title}</TableCell>;\n          })}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {trades.map((t) => {\n          return (\n            <TableRow>\n              <TableCell>{t.tradeDate}</TableCell>\n              <TableCell>{t.costBasis}</TableCell>\n              <TableCell>{t.quantity}</TableCell>\n              <TableCell>{t.ticker}</TableCell>\n            </TableRow>\n          );\n        })}\n        <NewTradeRow onSubmit={onSubmit} userId={userId} />\n      </TableBody>\n    </Table>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport {\n  TableRow,\n  TableCell,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport NumberFormat from \"react-number-format\";\n\nclass TradeRow extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>\n          <TextField\n            value={this.props.ticker}\n            placeholder=\"AAPL/CASH\"\n            InputProps={{\n              style: {\n                color:\n                  this.props.ticker == \"\" ? undefined : this.props.color,\n              },\n            }}\n            inputProps={{\n              style: {\n                textTransform: \"uppercase\",\n              },\n            }}\n            onChange={(e) => {\n              this.props.handleEdit(\n                e.target.value.toUpperCase(),\n                parseFloat(this.props.weight),\n                this.props.index\n              );\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <NumberFormat\n            allowNegative={false}\n            decimalScale=\"1\"\n            customInput={TextField}\n            placeholder={this.props.weightPlace}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n            }}\n            value={this.props.weight}\n            onValueChange={(e) => {\n              this.props.handleEdit(\n                this.props.ticker,\n                e.floatValue,\n                this.props.index\n              );\n            }}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nexport default TradeRow;\n","export const piePallete = [\n  \"#0074D9\",\n  \"#FF4136\",\n  \"#2ECC40\",\n  \"#FF851B\",\n  \"#7FDBFF\",\n  \"#B10DC9\",\n  \"#FFDC00\",\n  \"#001f3f\",\n  \"#39CCCC\",\n  \"#01FF70\",\n  \"#85144b\",\n  \"#F012BE\",\n  \"#3D9970\",\n  \"#111111\",\n  \"#AAAAAA\",\n];\nexport const colors = {\n  lightGreen: \"#f3f7f3\",\n  green: \"#96caa0\",\n  lightRed: \"#faebed\",\n  red: \"#db4f69\",\n  lightBlue: \"#f1f5f8\",\n  blue: \"#719bb9\",\n  grey: \"#bdbdbd\",\n  lightPurple: \"#F4EAF2\",\n  purple: \"#932b7a\",\n  lightGrey: \"#FDFCFC\",\n  white: \"#fff\",\n};\n","import React, { useState } from \"react\";\nimport TradeRow from \"./TradeRow\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { piePallete, colors } from \"./colors\";\n\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n  Typography,\n  IconButton,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\n// if (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nclass ManTradesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trades: [{ ticker: \"\", weight: null }],\n      total_weight: 0,\n      validPortfolio: false,\n    };\n  }\n\n  componentDidMount = () => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/holdings/manual`, {\n        params: { edit_id: this.props.editId },\n      })\n      .then((res) => {\n        this.setState(\n          { trades: [...res.data.holdings, { ticker: \"\", weight: null }] },\n          () => {\n            this.calculateWeight();\n          }\n        );\n      });\n  };\n\n  handleCreate = () => {\n    axios\n      .post(`${BASE_DOMAIN}/stonks/holdings/create`, {\n        user_id: this.props.userId,\n        edit_id: this.props.editId,\n        portfolio: this.state.trades.filter(\n          (t) => !isNaN(t.weight) && t.ticker != \"\"\n        ),\n      })\n      .then((res) => {\n        this.props.advanceStep && this.props.advanceStep(8);\n      })\n      .catch((err) => {\n        if (err.response) {\n          // check data\n          const errMsg = err.response.data.errMsg;\n          this.setState({ errMsg: errMsg });\n        }\n      });\n  };\n\n  calculateWeight = () => {\n    let validPortfolio = true;\n    const total_weight = this.state.trades.reduce((sum, t) => {\n      return sum + (t.weight ? parseFloat(t.weight) : 0);\n    }, 0);\n    if (total_weight != 100) validPortfolio = false;\n\n    this.setState({\n      total_weight: total_weight,\n      validPortfolio: validPortfolio,\n    });\n  };\n\n  handleHoldingEdit = (ticker, weight, index) => {\n    let validPortfolio = true;\n\n    const new_trades = this.state.trades;\n    if (index + 1 >= new_trades.length && ticker != \"\" && !isNaN(weight)) {\n      new_trades.push({ ticker: \"\", weight: null });\n    }\n\n    new_trades[index] = { weight: weight, ticker: ticker };\n\n    const total_weight = new_trades.reduce((sum, t) => {\n      return sum + (t.weight ? parseFloat(t.weight) : 0);\n    }, 0);\n    if (total_weight != 100) validPortfolio = false;\n\n    let errMsg = undefined;\n    if (\n      new_trades.reduce((isDup, t, i) => {\n        return isDup || (t.ticker == ticker && index != i && ticker != \"\");\n      }, false)\n    ) {\n      errMsg = \"Duplicate ticker: \".concat(ticker);\n      validPortfolio = false;\n    }\n\n    this.setState({\n      trades: new_trades,\n      total_weight: total_weight,\n      errMsg: errMsg,\n      validPortfolio: validPortfolio,\n    });\n  };\n\n  render() {\n    var data = this.state.trades.map((t, index) => {\n      const weight = isNaN(t.weight) ? 0 : t.weight;\n      const slice = {\n        title: t.ticker,\n        value: weight,\n        color: piePallete[index % piePallete.length],\n      };\n      return slice;\n    });\n\n    return (\n      <div>\n        <Typography variant=\"h4\">Manual holdings</Typography>\n        <Typography style={{ color: \"gray\" }} variant=\"subtitle1\">\n          Ensure your percentages add up to 100%\n        </Typography>\n\n        <div\n          style={{ display: \"flex\", alignItems: \"flex-start\", marginTop: 20 }}\n        >\n          <div style={{ flexGrow: \"1\", marginLeft: 20 }}>\n            <Table>\n              <TableHead>\n                <TableRow style={{backgroundColor: colors.lightBlue}}>\n                  {[\"Ticker\", \"Percent\"].map((o) => (\n                    <TableCell>\n                      <b>{o}</b>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.trades.map((t, index) => {\n                  return (\n                    <TradeRow\n                      weightPlace={(100 - this.state.total_weight).toFixed(1)}\n                      handleEdit={this.handleHoldingEdit}\n                      ticker={t.ticker}\n                      weight={t.weight}\n                      index={index}\n                      color={piePallete[index % piePallete.length]}\n                    />\n                  );\n                })}\n              </TableBody>\n              {this.state.errMsg != undefined && (\n                <Typography\n                  variant=\"caption\"\n                  style={{\n                    color: \"red\",\n                    textAlign: \"left\",\n                    marginTop: 5,\n                  }}\n                >\n                  {this.state.errMsg}\n                </Typography>\n              )}\n            </Table>\n\n            <div\n              style={{\n                textAlign: \"right\",\n                marginTop: 5,\n              }}\n            >\n              Total:{\" \"}\n              <span\n                style={{\n                  color: this.state.total_weight <= 100 ? \"green\" : \"red\",\n                }}\n              >\n                {this.state.total_weight}%{\" \"}\n              </span>{\" \"}\n              of 100%\n            </div>\n\n            <Button\n              disabled={!this.state.validPortfolio}\n              onClick={this.handleCreate}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n                color: \"white\",\n                opacity: this.state.validPortfolio ? 1.0 : 0.5,\n                marginTop: 20,\n              }}\n            >\n              {!!this.props.editId ? 'Update Portfolio' : 'Create Portfolio'}\n            </Button>\n          </div>\n\n          <PieChart\n            style={{ flexGrow: \"1\" }}\n            radius={20}\n            lineWidth={15}\n            viewBoxSize={[100, 100]}\n            center={[50, 30]}\n            lengthAngle={Math.min((this.state.total_weight / 100) * 360, 360)}\n            data={data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManTradesTable;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { EnterTradesTable } from \"./EnterTradesTable\";\nimport ManTradesTable from \"./ManTradesTable\";\nimport {\n  ArrowBackIosRounded,\n  Link as LinkIcon,\n  Twitter,\n  YouTube,\n  Email,\n  Lock,\n  PlusOne,\n} from \"@material-ui/icons\";\n/*********\n * 3 Steps:ti\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  LinearProgress,\n  Link,\n  IconButton,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\n// if (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst ICONS = {\n  twitter: Twitter,\n  youtube: YouTube,\n  general: LinkIcon,\n  newsletter: Email,\n};\n\nconst LinksUpload = ({ links, setLinks }) => {\n  let alternateLinks = Object.keys(ICONS)\n    .map((o) => {\n      return { link_type: o, url: \"\" };\n    })\n    .filter((o) => !links.map((l) => l.link_type).includes(o.link_type));\n\n  const [newLink, setNewLink] = useState({ link_type: \"\", url: \"\" });\n  const handleSubmit = () => {\n    setLinks([...links, newLink]);\n    setNewLink({ link_type: \"\", url: \"\" });\n  };\n\n  const handleDelete = (index) => {\n    let templinks = links;\n    templinks.splice(index, 1);\n    setLinks([...templinks]);\n  };\n\n  return (\n    <>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {[\"Social media links (up to 4)\", \"URL\", \"\"].map((o) => (\n              <TableCell>{o}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {links.map((link, index) => {\n            const Icon = ICONS[link.link_type];\n            return (\n              <TableRow>\n                <TableCell>\n                  <Icon />\n                </TableCell>\n                <TableCell>{link.url}</TableCell>\n                <TableCell>\n                  <Button\n                    style={{ backgroundColor: \"#EC4067\", color: \"white\" }}\n                    onClick={() => handleDelete(index)}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            );\n          })}\n          {links.length < 4 && (\n            <TableRow>\n              <TableCell>\n                <Select\n                  value={newLink.link_type}\n                  onChange={(e) =>\n                    setNewLink({ ...newLink, link_type: e.target.value })\n                  }\n                >\n                  {alternateLinks.map((al) => {\n                    const DIcon = ICONS[al.link_type];\n                    return (\n                      <MenuItem value={al.link_type}>\n                        <DIcon />\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n                <Typography variant=\"caption\">{newLink.link_type}</Typography>\n              </TableCell>\n              <TableCell>\n                <TextField\n                  value={newLink.url}\n                  onChange={(e) =>\n                    setNewLink({ ...newLink, url: e.target.value })\n                  }\n                />\n              </TableCell>\n              <TableCell>\n                <Button\n                  onClick={handleSubmit}\n                  style={{ backgroundColor: \"#729FBF\", color: \"white\" }}\n                >\n                  Add\n                </Button>\n              </TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport const UserInfo = ({\n  onFormSubmit,\n  setUserId,\n  editId,\n  editDetails,\n  setEditDetails,\n  refresh,\n}) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const [title, setTitle] = useState(editDetails.title);\n  const [description, setDescription] = useState(editDetails.description);\n  const [link, setLink] = useState(editDetails.link);\n  const [subdomain, setSubdomain] = useState(editDetails.subdomain);\n  const [name, setName] = useState(editDetails.name);\n  const [email, setEmail] = useState(editDetails.email);\n  const [phone, setPhone] = useState(editDetails.phone);\n  const [showAmounts, setShowAmounts] = useState(editDetails.show_amounts);\n  const [userId, setDangerousUserId] = useState(\"\");\n  const [links, setLinks] = useState(editDetails.links);\n\n  useEffect(() => {\n    setTitle(editDetails.title);\n    setDescription(editDetails.description);\n    setLink(editDetails.link);\n    setSubdomain(editDetails.subdomain);\n    setName(editDetails.name);\n    setEmail(editDetails.email);\n    setPhone(editDetails.phone);\n    setShowAmounts(editDetails.show_amounts);\n    setLinks(editDetails.links);\n\n    //\n    if (!!editId) {\n      axios\n        .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: editId })\n        .then((res) => {\n          setDangerousUserId(res.data.user);\n        });\n    }\n  }, [editDetails]);\n\n  const add_plaid = editDetails.plaid_connected != !!editDetails.subdomain;\n\n  // TODO: avoid resubmitting every time here, and just get the user associated\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n        edit_id: editId,\n        links: links,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          // Update details via callback?\n          setEditDetails({\n            title: title,\n            description: description,\n            link: link,\n            subdomain: subdomain,\n            show_amounts: showAmounts ? \"yes\" : \"no\",\n            name: name,\n            email: email,\n            phone: phone,\n            plaid_connected: editDetails.plaid_connected,\n            editUrl: res.data.editUrl,\n            links: links,\n          });\n          onFormSubmit();\n        } else {\n          setError(\"An undescribed error occurred\");\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.err);\n        } else {\n          setError(\"Please email support@withlaguna.com\");\n        }\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    if (!!editId) {\n      if (body.subdomain && body.subdomain == editDetails.subdomain) return;\n      else if (body.email && body.email === editDetails.email) return;\n      else if (body.phone && body.phone === editDetails.phone) return;\n    }\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  const subdomain_link = `https://${editDetails.subdomain}.withlaguna.com`;\n\n  return (\n    <>\n      <Typography variant=\"h4\" style={{marginBottom: theme.spacing(2)}}>\n        <b>Account creation and configuration</b>\n      </Typography>\n      {!editId && (\n        <>\n          <Typography variant=\"h6\">\n            <Link href=\"/#/signin\">Sign in</Link>\n          </Typography>\n        </>\n      )}\n      {add_plaid && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"error\">\n            Your page is live, but your brokerage hasn't been connected yet\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Import your trades\n          </Button>\n        </div>\n      )}\n      {refresh && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"warning\">\n            Your brokerage credentials have expired. Please re-log them\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Reconnect\n          </Button>\n        </div>\n      )}\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            <b>Used to customize your page :) </b>\n\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n            style={{ marginTop: theme.spacing(2) }}\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n            style={{ marginTop: theme.spacing(2) }}\n          ></TextField>\n          <LinksUpload links={links} setLinks={setLinks} />\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              let temp = e.target.value;\n              temp = temp.replace(/\\W/g, \"\");\n              setSubdomain(temp);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e 'rob' would look like, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n            style={{ marginTop: theme.spacing(2) }}\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n            style={{ marginTop: theme.spacing(2) }}\n          ></TextField>\n          <TextField\n            value={email}\n            style={{ marginTop: theme.spacing(2) }}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            style={{ marginTop: theme.spacing(2) }}\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && <Typography color=\"red\">{error}</Typography>}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          {!!editDetails.subdomain && (\n            <div>\n              <Typography>Check out your page: </Typography>\n              <Link href={subdomain_link}>{subdomain_link}</Link>\n            </div>\n          )}\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            {!!editId ? \"Update\" : \"Submit\"} Information\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nconst CSVUpload = ({ userId, advanceStep }) => {\n  const [showUpload, setShowUpload] = useState(false);\n  const [presignedPost, setPresignedPost] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadFile, setUploadFile] = useState({\n    preview: \"\",\n    raw: \"\",\n    name: \"\",\n  });\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      let name = e.target.value.split(\"\\\\\").pop();\n      setUploadFile({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n        name: name,\n      });\n      getSignedUrl(name);\n    }\n  };\n\n  const getSignedUrl = (name) => {\n    let fileName = name.replace(/[^\\w\\d_\\-.]+/gi, \"\");\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/sign/${userId}`, {\n        params: { file_name: fileName },\n      })\n      .then((res) => {\n        setPresignedPost(res.data);\n      });\n  };\n\n  const onUploadProgress = (e) => {\n    console.log(e);\n  };\n\n  const handleUpload = (e) => {\n    setUploading(true);\n    e.preventDefault();\n\n    console.log(presignedPost);\n    console.log(uploadFile);\n\n    const formData = new FormData();\n    Object.keys(presignedPost.fields).forEach((k) => {\n      const v = presignedPost.fields[k];\n      formData.append(k, v);\n    });\n    formData.append(\"file\", uploadFile.raw);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = parseInt(\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        );\n        // Update state here\n        onUploadProgress(progress);\n      },\n    };\n\n    axios\n      .post(`${presignedPost.url}`, formData, config)\n      .then((res) => {\n        advanceStep(3);\n        axios\n          .get(`${BASE_DOMAIN}/stonks/access/uploaded/${userId}`)\n          .then((res) => {\n            console.log(res);\n          })\n          .catch(console.error(\"Did not set manual trade issue\"));\n      })\n      .catch(console.error(\"Uploading problemo\"))\n      .finally(setUploading(false));\n  };\n\n  return (\n    <>\n      {!uploadFile.preview ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            Upload a screenshot of your positions\n            <input type=\"file\" hidden onChange={handleChange} />\n          </Button>\n          <Typography variant=\"caption\">\n            We'll automatically process the data for you\n          </Typography>\n        </div>\n      ) : uploading ? (\n        <CircularProgress />\n      ) : (\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n            color: \"white\",\n            fontWeight: 800,\n          }}\n          onClick={handleUpload}\n        >\n          Upload {uploadFile.name}\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh, title }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const theme = useTheme();\n\n  const [plaidStatus, setPlaidStatus] = useState([]);\n\n  const getPlaidStatus = () => {\n    // ALWAYS GET PLAID STATUS FROM THE API\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_status`)\n      .then((res) => {\n        setPlaidStatus(res.data?.brokers || []);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n\n    getPlaidStatus();\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep(3);\n      return;\n    }\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep(3);\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  const handleManualEntry = () => {\n    advanceStep(7);\n  };\n\n  const handleFileUpload = () => {\n    advanceStep(5);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in brokerage connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError || !title) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: theme.spacing(2),\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            maxWidth: \"400px\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              open();\n            }}\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            <b style={{ marginRight: \"4px\" }}>Auto</b> Connect brokerage\n          </Button>\n          {plaidStatus.map((status) => (\n            <Alert style={{ marginTop: theme.spacing(2) }} severity=\"warning\">\n              {status}\n            </Alert>\n          ))}\n        </div>\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleFileUpload}\n        >\n          <b style={{ marginRight: \"4px\" }}>EASIEST</b> Upload a screenshot of\n          your positions\n        </Button>\n        <Typography variant=\"caption\">\n          We'll automatically process the data for you\n        </Typography>\n        {/* <CSVUpload userId={userId} advanceStep={advanceStep} /> */}\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleManualEntry}\n        >\n          <b style={{ marginRight: \"4px\" }}>Manual</b> Enter trades\n        </Button>\n      </div>\n\n      <>\n        {showTable && (\n          <>\n            <ManTradesTable userId={userId} />\n            <Button\n              onClick={() => {\n                advanceStep();\n              }}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #729FBF, #E0CDE1)\",\n                color: \"white\",\n              }}\n            >\n              CONTINUE\n            </Button>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"p1\">\n        We've gotten reports that our emails are ending in your spam box. Please\n        double-check there as well after ~5 min\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst Finished = ({ displayDetail }) => {\n  const { width, height } = useWindowSize();\n  console.log(\"in finish with display\", displayDetail);\n  let REDIRECT_BASE =\n    process.env.NODE_ENV === \"development\" ? \"http://\" : \"https://\";\n  let REDIRECT_DOMAIN =\n    process.env.NODE_ENV === \"development\"\n      ? \".localhost:4200/\"\n      : \".withlaguna.com/\";\n\n  const pageUrl = `${REDIRECT_BASE}${displayDetail.subdomain}${REDIRECT_DOMAIN}`;\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Congrats {displayDetail.name}!</Typography>\n      <Typography variant=\"h5\">Your page is ready at</Typography>\n      <Typography>\n        <Link href={pageUrl}>{displayDetail.subdomain}.withLaguna.com</Link>\n      </Typography>\n\n      <Typography style={{ marginTop: 30 }}>\n        You can edit your profile at <br />\n        <Link href={displayDetail.editUrl}>{displayDetail.editUrl}</Link>\n      </Typography>\n\n      <Button\n        href={pageUrl}\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n          marginTop: 50,\n        }}\n      >\n        View Page\n      </Button>\n    </>\n  );\n};\n\nconst Update = () => {\n  const { width, height } = useWindowSize();\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Thanks for updating your page :)</Typography>\n      <br />\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst InstructiveFileUpload = ({ userId, advanceStep }) => {\n  return (\n    <>\n      <img width=\"800px\" src=\"/upload_robinhood.png\" />\n      <CSVUpload userId={userId} advanceStep={advanceStep} />\n    </>\n  );\n};\n\n// const UploadTrades = ({ advanceStep, setShowUpload, userId }) => {\n\n// };\n\nconst SignIn = ({}) => {\n  const [success, setSuccess] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const theme = useTheme();\n\n  const handleSubmit = () => {\n    setSubmitting(true);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/send`, { params: { email: email } })\n      .then(() => {\n        setSuccess(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.err);\n        } else {\n          setError(\"Please email support@withlaguna.com\");\n        }\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div\n      style={{ marginLeft: theme.spacing(12), marginRight: theme.spacing(12) }}\n    >\n      <Typography variant=\"h5\">\n        Enter your email address to get your sign-in link\n      </Typography>\n      <br />\n      <br />\n      {!success && (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            label=\"Email\"\n            error={!!error}\n            helperText={error}\n          />\n          <br />\n          {submitting && <LinearProgress />}\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </div>\n      )}\n      {!!success && (\n        <Typography varian=\"body\">\n          You've been sent an email. Click it to access your admin page\n        </Typography>\n      )}\n      <br />\n      <br />\n      <Typography variant=\"caption\">\n        Having an issue? <a href=\"mailto:team@withlaguna.com\">Contact us</a>\n      </Typography>\n    </div>\n  );\n};\n\nexport const fetchEditDetails = (edit_id, setEdit) => {\n  axios\n    .get(`${BASE_DOMAIN}/stonks/access/edit_info`, {\n      params: {\n        edit_id: edit_id,\n      },\n    })\n    .then((res) => {\n      let editable = Object.assign({}, res.data);\n      editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n      setEdit(editable);\n    })\n    .catch((err) => {\n      setEdit(\"err\");\n    });\n};\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const [editId, setEditId] = useState();\n  const [err, setErr] = useState(false);\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n    links: [],\n  });\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let hash = window.location.hash;\n    if (hash == \"#/signin\") {\n      setStep(6);\n    }\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setRefresh(true);\n      // setUserId(plaid_refresh_id);\n    }\n    let plaid_login = params.get(\"plaid_login\");\n    let edit_id = params.get(\"edit\");\n    if (!!edit_id) {\n      setStep(1);\n      setEditId(edit_id);\n\n      if (!!plaid_login) {\n        axios\n          .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: edit_id })\n          .then((res) => {\n            setUserId(res.data.user);\n          });\n        setStep(2);\n      }\n\n      // fetch initial props\n      axios\n        .get(`${BASE_DOMAIN}/stonks/access/edit_info`, {\n          params: {\n            edit_id: edit_id,\n          },\n        })\n        .then((res) => {\n          let editable = Object.assign({}, res.data);\n          editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n          setEditDetails(editable);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErr(true);\n        });\n    }\n  }, []);\n\n  function renderStep() {\n    if (err) {\n      return <div>Something went wrong with laguna</div>;\n    } else {\n      if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n      else if (step === 1)\n        return (\n          <UserInfo\n            onFormSubmit={() =>\n              editDetails.plaid_connected && !refresh ? \"\" : setStep(2)\n            }\n            setUserId={setUserId}\n            refresh={refresh}\n            editId={editId}\n            editDetails={editDetails}\n            setEditDetails={setEditDetails}\n          />\n        );\n      else if (step === 2)\n        return (\n          <PlaidInfo\n            userId={userId}\n            advanceStep={setStep}\n            refresh={refresh}\n            title={editDetails.title}\n          />\n        );\n      else if (step === 3) return <Wait />;\n      else if (step === 4) return <Update />;\n      else if (step === 5)\n        return <InstructiveFileUpload userId={userId} advanceStep={setStep} />;\n      else if (step == 6) return <SignIn />;\n      else if (step == 7)\n        return <ManTradesTable userId={userId} advanceStep={setStep} />;\n      else if (step == 8) return <Finished displayDetail={editDetails} />;\n      else return <></>;\n    }\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n      className=\"App\"\n    >\n      <Grid item xs={11} sm={8} md={6}>\n        {(step == 7 || step == 5) && (\n          <IconButton\n            size=\"small\"\n            style={{ float: \"left\", marginTop: theme.spacing(3) }}\n            onClick={() => setStep(2)}\n          >\n            <ArrowBackIosRounded />\n            Back\n          </IconButton>\n        )}\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Typography,\n  Grid,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  TextField,\n  Snackbar,\n  AppBar,\n  Toolbar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  CssBaseline,\n  Drawer,\n  Hidden,\n  IconButton,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { UserInfo, fetchEditDetails } from \"../AccessForm\";\nimport { Person, TrendingUp, People, Menu } from \"@material-ui/icons\";\nimport ManTradesTable from \"../ManTradesTable\";\nimport axios from \"axios\";\nimport NumberFormat from \"react-number-format\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport {\n  ContentState,\n  EditorState,\n  convertFromHTML,\n  convertFromRaw,\n  convertToRaw,\n} from \"draft-js\";\nimport draftToHtml from \"draftjs-to-html\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport renderHTML from \"react-render-html\";\n\nimport { colors } from \"../colors\";\n\nconst drawerWidth = 200;\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\n// if (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst Profile = ({ editId, editDetails, setEditDetails }) => {\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = () => {\n    setSuccess(true);\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  return (\n    <>\n      <UserInfo\n        editId={editId}\n        editDetails={editDetails}\n        setEditDetails={setEditDetails}\n        onFormSubmit={handleSubmit}\n      />\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Updated succesfully!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nconst HoldingsTableRow = ({ h, editId }) => {\n  const memoHtml = `<div>${h.memo ? h.memo : \"\"}</div>`;\n  const blocksFromHTML = convertFromHTML(memoHtml);\n  const initialContentState = ContentState.createFromBlockArray(\n    blocksFromHTML.contentBlocks,\n    blocksFromHTML.entityMap\n  );\n\n  const [addingMemo, setAddingMemo] = useState(false);\n  const [editorState, setEditorState] = useState(\n    EditorState.createWithContent(initialContentState)\n  );\n\n  // const initialContentState = convertFromRaw(h.memo);\n\n  const onEditorStateChange = (e) => {\n    setEditorState(e);\n  };\n\n  const onContentStateChange = (e) => {};\n\n  const handleClick = () => {\n    if (addingMemo) {\n      axios\n        .post(`${BASE_DOMAIN}/stonks/access/memo/update`, {\n          holding_id: h.id,\n          edit_id: editId,\n          memo: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n        })\n        .then((res) => {});\n    }\n    setAddingMemo(!addingMemo);\n  };\n  return (\n    <>\n      <TableRow>\n        <TableCell>{h.ticker_symbol}</TableCell>\n        <TableCell>{renderHTML(memoHtml)}</TableCell>\n        <TableCell>\n          <Button\n            style={{\n              backgroundColor: addingMemo ? colors.purple : colors.blue,\n              color: \"white\",\n            }}\n            onClick={handleClick}\n          >\n            {addingMemo ? \"Save\" : \"Edit memo\"}\n          </Button>\n        </TableCell>\n        <TableCell>{!!h.plaid_security_id ? \"plaid\" : \"self\"}</TableCell>\n      </TableRow>\n      {addingMemo && (\n        <TableRow style={{ backgroundColor: colors.lightBlue }}>\n          <TableCell colSpan={4}>\n            <Editor\n              editorState={editorState}\n              toolbarClassName=\"toolbarClassName\"\n              wrapperClassName=\"wrapperClassName\"\n              editorClassName=\"editorClassName\"\n              onEditorStateChange={onEditorStateChange}\n              onContentStateChange={onContentStateChange}\n            />\n          </TableCell>\n        </TableRow>\n      )}\n    </>\n  );\n};\n\nconst HoldingsTable = ({ editId, subdomain }) => {\n  useEffect(() => {\n    fetchPortfolio();\n  }, [subdomain]);\n\n  const [holdings, setHoldings] = useState([]);\n  const fetchPortfolio = () => {\n    axios.get(`${BASE_DOMAIN}/stonks/holdings/${subdomain}`).then((res) => {\n      setHoldings(res.data.holdings);\n    });\n  };\n  return (\n    <>\n      <Typography variant=\"h4\">\n        <b>Holdings & memos</b>\n      </Typography>\n      <Typography style={{ color: \"gray\" }} variant=\"subtitle1\">\n        Holdings below are imported from plaid and manual trades\n      </Typography>\n      <Table style={{ margin: 20 }}>\n        <TableHead>\n          <TableRow style={{ backgroundColor: colors.lightPurple }}>\n            {[\"Ticker\", \"Memo\", \"Action\", \"Source\"].map((o) => {\n              return (\n                <TableCell>\n                  <b>{o}</b>\n                </TableCell>\n              );\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {holdings.map((h) => {\n            return <HoldingsTableRow h={h} editId={editId} />;\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nconst Portfolios = ({ editId, subdomain }) => {\n  return (\n    <>\n      <Grid container spacing={8}>\n        <Grid item md={12}>\n          {!!subdomain && (\n            <HoldingsTable editId={editId} subdomain={subdomain} />\n          )}\n        </Grid>\n        <Grid item md={12}>\n          <ManTradesTable editId={editId} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nconst Subscribers = ({ editId }) => {\n  const [subs, setSubs] = useState([]);\n  const [newSub, setNewSub] = useState({ name: \"\", phone: \"\" });\n  const [err, setErr] = useState(\"\");\n  useEffect(() => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/subscribers`, {\n        params: { edit_id: editId },\n      })\n      .then((res) => {\n        setSubs(res.data.subscribers);\n      });\n  }, []);\n\n  const handleSubmit = () => {\n    axios\n      .post(`${BASE_DOMAIN}/stonks/submit`, {\n        ...newSub,\n        edit_id: editId,\n      })\n      .then(() => {\n        setSubs([...subs, newSub]);\n        setNewSub({ name: \"\", phone: \"\" });\n      })\n      .catch((error) => {\n        if (error.response) {\n          setErr(error.response.data.err);\n        } else {\n          setErr(\"Please email support@withlaguna.com\");\n        }\n      });\n  };\n  return (\n    <>\n      <Typography variant=\"h4\">\n        <b>Manage subscribers ({!!subs.length ? subs.length : 0})</b>\n      </Typography>\n      <Table style={{ margin: 20 }}>\n        <TableHead>\n          <TableRow style={{ backgroundColor: colors.lightBlue }}>\n            {[\"Name\", \"Phone\", \"Date added\"].map((o) => (\n              <TableCell>\n                <b>{o}</b>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <TextField\n                label=\"name\"\n                value={newSub.name}\n                onChange={(e) =>\n                  setNewSub(Object.assign({}, newSub, { name: e.target.value }))\n                }\n              />\n            </TableCell>\n            <TableCell>\n              <NumberFormat\n                value={newSub.phone}\n                format=\"(###) ###-####\"\n                customInput={TextField}\n                onValueChange={(values) => {\n                  const { value } = values;\n                  setNewSub(Object.assign({}, newSub, { phone: value }));\n                }}\n                placeholder=\"(555)-123-4567\"\n                label=\"phone\"\n                helperText={!!err ? err : \"\"}\n                err={!!err}\n              />\n            </TableCell>\n            <TableCell>\n              <Button\n                style={{\n                  backgroundImage:\n                    \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n                  color: \"white\",\n                }}\n                onClick={handleSubmit}\n              >\n                Add new sub\n              </Button>\n            </TableCell>\n          </TableRow>\n          {subs.map((sub) => {\n            return (\n              <TableRow>\n                <TableCell>{sub.name}</TableCell>\n                <TableCell>\n                  <NumberFormat\n                    displayType=\"text\"\n                    value={sub.phone}\n                    format=\"(###) ###-####\"\n                  ></NumberFormat>\n                </TableCell>\n                <TableCell>{sub.created_date}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </>\n  );\n};\n\nfunction Admin(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const [activeView, setActiveView] = useState(1);\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n    links: [],\n  });\n\n  let params = new URLSearchParams(props.location.search);\n  let edit_id = params.get(\"edit\");\n\n  useEffect(() => {\n    fetchEditDetails(edit_id, (e) => {\n      console.log(e);\n      setEditDetails(e);\n    });\n  }, []);\n\n  if (!edit_id) {\n    return \"Access not allowed. If you believe this was in error please contact support\";\n  }\n\n  const Views = [\n    {\n      title: \"My profile\",\n      component: (\n        <Profile\n          editId={edit_id}\n          editDetails={editDetails}\n          setEditDetails={setEditDetails}\n        />\n      ),\n      icon: <Person />,\n    },\n    {\n      title: \"Portfolios\",\n      component: (\n        <Portfolios editId={edit_id} subdomain={editDetails.subdomain} />\n      ),\n      icon: <TrendingUp />,\n    },\n    {\n      title: \"Subscribers\",\n      component: <Subscribers editId={edit_id} />,\n      icon: <People />,\n    },\n  ];\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: theme.spacing(2),\n          }}\n        >\n          <a href=\"https://withlaguna.com\">\n            <img src=\"FullLogoBlack.png\" width=\"80\" />\n          </a>\n        </div>\n      </div>\n      <List>\n        {Views.map((view, index) => (\n          <ListItem\n            button\n            key={view.title}\n            onClick={() => setActiveView(index)}\n            selected={activeView == index}\n          >\n            <ListItemIcon>{view.icon}</ListItemIcon>\n            <ListItemText primary={view.title} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Grid container>\n      <Grid item>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar\n            color=\"transparent\"\n            elevation={0}\n            position=\"fixed\"\n            className={classes.appBar}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                edge=\"start\"\n                onClick={handleDrawerToggle}\n                className={classes.menuButton}\n              >\n                <Menu />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n              <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                }}\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Drawer\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n              >\n                {drawer}\n              </Drawer>\n            </Hidden>\n          </nav>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            {Views[activeView].component}\n          </main>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Admin;\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { AccessForm } from \"./AccessForm.js\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Admin from \"./admin/Admin\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      \"Inter\",\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n    h4: {\n      fontWeight: 700,\n    },\n    h5: {\n      fontWeight: 700,\n    },\n    h6: {\n      fontWeight: 700,\n    },\n    b: { fontWeight: 800 },\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n  overrides: {\n    MuiTextField: {\n      marginTop: 4\n    }\n  }\n});\n\n// function App() {\n//   return (\n//     <ThemeProvider theme={theme}>\n//       <div className=\"App\">\n//         <AccessForm/>\n//       </div>\n//     </ThemeProvider>\n//   );\n// }\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={AccessForm} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route component={() => <div>404 Not found</div>} />\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}