{"version":3,"sources":["EnterTradesTable.js","AccessForm.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_DOMAIN","formValues","tradeType","title","pl","init","required","tradeDate","costBasis","quantity","ticker","priceSold","percentageReturn","NewTradeRow","userId","onSubmit","editableTrades","Object","keys","reduce","res","key","useState","editTrades","setEditTrades","errorTrades","setErrorTrades","generalError","setGeneralError","handleInputChange","e","preventDefault","target","name","value","TableRow","style","height","entries","map","TableCell","TextField","onChange","placeholder","error","size","fullWidth","helperText","Button","onClick","invalid","filter","k","length","console","log","axios","post","then","data","allow","catch","err","response","JSON","stringify","backgroundImage","color","EnterTradesTable","trades","setTrades","theme","useTheme","useEffect","get","Table","marginTop","spacing","marginBottom","TableHead","TableBody","t","soldPrice","returnPercentage","AccessCode","advanceStep","input","setInput","setError","handleFailure","Lock","Typography","variant","display","flexDirection","alignItems","justifyContent","label","marginLeft","UserInfo","setUserId","editId","editDetails","setEditDetails","refresh","setTitle","description","setDescription","link","setLink","subdomain","setSubdomain","setName","email","setEmail","phone","setPhone","show_amounts","showAmounts","setShowAmounts","setDangerousUserId","edit_id","user","add_plaid","plaid_connected","handleSubmit","id","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","params","subdomain_link","padding","Alert","severity","Paper","Link","href","onBlur","FormControl","component","margin","textAlign","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","CSVUpload","presignedPost","setPresignedPost","uploading","setUploading","preview","raw","uploadFile","setUploadFile","getSignedUrl","fileName","replace","file_name","CircularProgress","fontWeight","formData","FormData","fields","forEach","v","append","config","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","finally","type","hidden","files","split","pop","URL","createObjectURL","PlaidInfo","token","setToken","showTable","setShowTable","plaidStatus","setPlaidStatus","link_token","brokers","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","maxWidth","marginRight","status","Wait","useWindowSize","width","Update","InstructiveFileUpload","src","AccessForm","step","setStep","setRefresh","setEditId","setErr","search","window","location","URLSearchParams","plaid_login","editable","assign","Grid","container","justify","minHeight","item","xs","sm","md","paddingTop","paddingBottom","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.509345ec.chunk.js","sourcesContent":["// Enter trade table.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst trade = {\n  tradeType: \"buy\" | \"sell\",\n  tradeDate: \"\",\n  costBasis: \"\",\n  quantity: \"\",\n  ticker: \"\",\n  priceSold: \"\",\n  percentageReturn: \"\", //calculated here\n};\n\nconst formValues = {\n  tradeType: {\n    title: \"Trade Type (buy/sell/other)\",\n    pl: \"buy/sell/other\",\n    init: \"\",\n    required: true,\n  },\n  tradeDate: {\n    title: \"Trade Date (mm/dd/yyyy)\",\n    pl: \"mm/dd/yyyy\",\n    init: \"\",\n    required: true,\n  },\n  costBasis: {\n    title: \"Cost Basis\",\n    pl: \"$10.01\",\n    init: \"\",\n    required: true,\n  },\n  quantity: { title: \"Quantity\", pl: \"5\", init: \"\", required: true },\n  ticker: { title: \"Ticker\", pl: \"AAPL\", init: \"\", required: true },\n  priceSold: { title: \"Sold price\", pl: \"100.0\", init: \"\" },\n  percentageReturn: { title: \"Return Percentage\", pl: \"305.75%\", init: \"\" },\n};\n\nconst NewTradeRow = ({ userId, onSubmit }) => {\n  const editableTrades = Object.keys(formValues).reduce((res, key) => {\n    res[key] = formValues[key].init || \"\";\n    return res;\n  }, {});\n\n  const [editTrades, setEditTrades] = useState(editableTrades);\n  const [errorTrades, setErrorTrades] = useState(editableTrades);\n  const [generalError, setGeneralError] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setEditTrades({\n      ...editTrades,\n      [e.target.name]: e.target.value,\n    });\n    setErrorTrades({\n      ...errorTrades,\n      [e.target.name]: false,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    // Submit this information into the DB and push it into the existing trades\n    e.preventDefault();\n\n    // Check trades are filled out\n    let invalid = Object.entries(formValues)\n      .filter(([key, value]) => {\n        return value?.required && !editTrades[key];\n      })\n      .reduce((res, [k, v]) => {\n        res[k] = true;\n        return res;\n      }, {});\n    if (Object.keys(invalid).length > 0) {\n      setErrorTrades(invalid);\n      return;\n    }\n\n    console.log(editTrades);\n\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/insert/${userId}`, editTrades)\n      .then((res) => {\n        if (res.data.allow) {\n          onSubmit(editTrades);\n          // Clear trading entries\n          setEditTrades(editableTrades);\n        } else {\n          setGeneralError(res.data);\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          setGeneralError(JSON.stringify(err.response.data.err));\n        }\n        // something went wrong here\n      });\n  };\n\n  return (\n    <TableRow style={{ height: 50 }}>\n      {Object.entries(formValues).map(([key, value]) => {\n        return (\n          <TableCell key={key}>\n            <TextField\n              name={key}\n              onChange={handleInputChange}\n              placeholder={value.pl}\n              // label={value.pl}\n              value={editTrades[key]}\n              error={!!errorTrades[key]}\n              size=\"tiny\"\n              fullWidth\n              helperText={value?.helperText}\n              required={value?.required}\n            />\n          </TableCell>\n        );\n      })}\n\n      <TableCell>\n        <Button\n          onClick={handleSubmit}\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n        >\n          Add trade\n        </Button>\n        {!!generalError && <>{generalError}</>}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const EnterTradesTable = ({ userId }) => {\n  const [trades, setTrades] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    // set trades from BE that were manually entered\n    axios.get(`${BASE_DOMAIN}/stonks/access/trades/${userId}`).then((res) => {\n      if (res.data.allow) {\n        setTrades(res.data.trades);\n      }\n    });\n  }, []);\n\n  const onSubmit = (editTrades) => {\n    // some logic to insert a trade here\n    setTrades([...trades, editTrades]);\n  };\n\n  // Add new trade row\n\n  return (\n    <Table\n      size=\"small\"\n      style={{ marginTop: theme.spacing(4), marginBottom: theme.spacing(4) }}\n    >\n      <TableHead>\n        <TableRow>\n          {Object.entries(formValues).map(([key, value]) => {\n            return <TableCell key={key}>{value.title}</TableCell>;\n          })}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {trades.map((t) => {\n          return (\n            <TableRow>\n              <TableCell>{t.tradeType}</TableCell>\n              <TableCell>{t.tradeDate}</TableCell>\n              <TableCell>{t.costBasis}</TableCell>\n              <TableCell>{t.quantity}</TableCell>\n              <TableCell>{t.ticker}</TableCell>\n              <TableCell>{t.soldPrice}</TableCell>\n              <TableCell>{t.returnPercentage}</TableCell>\n            </TableRow>\n          );\n        })}\n        <NewTradeRow onSubmit={onSubmit} userId={userId} />\n      </TableBody>\n    </Table>\n  );\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { Lock } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { EnterTradesTable } from \"./EnterTradesTable\";\n/*********\n * 3 Steps:ti\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Link,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst UserInfo = ({\n  advanceStep,\n  setUserId,\n  editId,\n  editDetails,\n  setEditDetails,\n  refresh,\n}) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const [title, setTitle] = useState(editDetails.title);\n  const [description, setDescription] = useState(editDetails.description);\n  const [link, setLink] = useState(editDetails.link);\n  const [subdomain, setSubdomain] = useState(editDetails.subdomain);\n  const [name, setName] = useState(editDetails.name);\n  const [email, setEmail] = useState(editDetails.email);\n  const [phone, setPhone] = useState(editDetails.phone);\n  const [showAmounts, setShowAmounts] = useState(editDetails.show_amounts);\n  const [userId, setDangerousUserId] = useState(\"\");\n\n  useEffect(() => {\n    setTitle(editDetails.title);\n    setDescription(editDetails.description);\n    setLink(editDetails.link);\n    setSubdomain(editDetails.subdomain);\n    setName(editDetails.name);\n    setEmail(editDetails.email);\n    setPhone(editDetails.phone);\n    setShowAmounts(editDetails.show_amounts);\n\n    //\n    if (!!editId) {\n      axios\n        .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: editId })\n        .then((res) => {\n          setDangerousUserId(res.data.user);\n        });\n    }\n  }, [editDetails]);\n\n  const add_plaid = editDetails.plaid_connected != !!editDetails.subdomain;\n\n  // TODO: avoid resubmitting every time here, and just get the user associated\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n        edit_id: editId,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          // Update details via callback?\n          setEditDetails({\n            title: title,\n            description: description,\n            link: link,\n            subdomain: subdomain,\n            show_amounts: showAmounts ? \"yes\" : \"no\",\n            name: name,\n            email: email,\n            phone: phone,\n            plaid_connected: editDetails.plaid_connected,\n          });\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    if (!!editId) {\n      if (body.subdomain && body.subdomain == editDetails.subdomain) return;\n      else if (body.email && body.email === editDetails.email) return;\n      else if (body.phone && body.phone === editDetails.phone) return;\n    }\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  const subdomain_link = `https://${editDetails.subdomain}.withlaguna.com`;\n\n  return (\n    <>\n      <Typography variant=\"h4\">Account creation and configuration</Typography>\n      {add_plaid && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"error\">\n            Your page is live, but your brokerage hasn't been connected yet\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Import your trades\n          </Button>\n        </div>\n      )}\n      {refresh && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"warning\">\n            Your brokerage credentials have expired. Please re-log them\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Reconnect\n          </Button>\n        </div>\n      )}\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            Used to customize your page :){\" \"}\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            label=\"Personal Bio Link (optional)\"\n            helperText=\"Twitter handle, website, Linkedin, etc. Write as https://withterra.com\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              setSubdomain(e.target.value);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e enter 'rob' if you want, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && (\n          <Typography color=\"red\">\n            Something went wrong :(. Please double check your information\n          </Typography>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          {!!editDetails.subdomain && (\n            <div>\n              <Typography>Check out your page: </Typography>\n              <Link href={subdomain_link}>{subdomain_link}</Link>\n            </div>\n          )}\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            {!!editId ? \"Update\" : \"Submit\"} Information\n          </Button>\n        </div>\n      </form>\n      {!!userId && (\n        <>\n          <Typography variant=\"h4\">Manual trades</Typography>\n          <EnterTradesTable userId={userId} />\n        </>\n      )}\n    </>\n  );\n};\n\nconst CSVUpload = ({ userId, advanceStep }) => {\n  const [showUpload, setShowUpload] = useState(false);\n  const [presignedPost, setPresignedPost] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadFile, setUploadFile] = useState({\n    preview: \"\",\n    raw: \"\",\n    name: \"\",\n  });\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      let name = e.target.value.split(\"\\\\\").pop();\n      setUploadFile({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n        name: name,\n      });\n      getSignedUrl(name);\n    }\n  };\n\n  const getSignedUrl = (name) => {\n    let fileName = name.replace(/[^\\w\\d_\\-.]+/gi, \"\");\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/sign/${userId}`, {\n        params: { file_name: fileName },\n      })\n      .then((res) => {\n        setPresignedPost(res.data);\n      });\n  };\n\n  const onUploadProgress = (e) => {\n    console.log(e);\n  };\n\n  const handleUpload = (e) => {\n    setUploading(true);\n    e.preventDefault();\n\n    console.log(presignedPost);\n    console.log(uploadFile);\n\n    const formData = new FormData();\n    Object.keys(presignedPost.fields).forEach((k) => {\n      const v = presignedPost.fields[k];\n      formData.append(k, v);\n    });\n    formData.append(\"file\", uploadFile.raw);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = parseInt(\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        );\n        // Update state here\n        onUploadProgress(progress);\n      },\n    };\n\n    axios\n      .post(`${presignedPost.url}`, formData, config)\n      .then((res) => {\n        advanceStep(3);\n        axios\n          .get(`${BASE_DOMAIN}/stonks/access/uploaded/${userId}`)\n          .then((res) => {\n            console.log(res);\n          })\n          .catch(console.error(\"Did not set manual trade issue\"));\n      })\n      .catch(console.error(\"Uploading problemo\"))\n      .finally(setUploading(false));\n  };\n\n  return (\n    <>\n      {!uploadFile.preview ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            Upload a screenshot of your positions\n            <input type=\"file\" hidden onChange={handleChange} />\n          </Button>\n          <Typography variant=\"caption\">\n            We'll automatically process the data for you\n          </Typography>\n        </div>\n      ) : uploading ? (\n        <CircularProgress />\n      ) : (\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n            color: \"white\",\n            fontWeight: 800,\n          }}\n          onClick={handleUpload}\n        >\n          Upload {uploadFile.name}\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh, title }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const theme = useTheme();\n\n  const [plaidStatus, setPlaidStatus] = useState([]);\n\n  if (!title) {\n    setError(true);\n  }\n\n  const getPlaidStatus = () => {\n    // ALWAYS GET PLAID STATUS FROM THE API\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_status`)\n      .then((res) => {\n        setPlaidStatus(res.data?.brokers || []);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n\n    getPlaidStatus();\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep(3);\n      return;\n    }\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep(3);\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  const handleManualEntry = () => {\n    setShowTable(true);\n  };\n\n  const handleFileUpload = () => {\n    advanceStep(5);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in brokerage connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: theme.spacing(2),\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            maxWidth: \"400px\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              open();\n            }}\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            <b style={{ marginRight: \"4px\" }}>Auto</b> Connect brokerage\n          </Button>\n          {plaidStatus.map((status) => (\n            <Alert style={{ marginTop: theme.spacing(2) }} severity=\"warning\">\n              {status}\n            </Alert>\n          ))}\n        </div>\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleFileUpload}\n        >\n          <b style={{ marginRight: \"4px\" }}>EASIEST</b> Upload a screenshot of\n          your positions\n        </Button>\n        <Typography variant=\"caption\">\n          We'll automatically process the data for you\n        </Typography>\n        {/* <CSVUpload userId={userId} advanceStep={advanceStep} /> */}\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleManualEntry}\n        >\n          <b style={{ marginRight: \"4px\" }}>Manual</b> Enter trades\n        </Button>\n      </div>\n\n      <>\n        {showTable && (\n          <>\n            <EnterTradesTable userId={userId} />\n            <Button\n              onClick={() => {\n                advanceStep();\n              }}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #729FBF, #E0CDE1)\",\n                color: \"white\",\n              }}\n            >\n              CONTINUE\n            </Button>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"p1\">\n        We've gotten reports that our emails are ending in your spam box. Please\n        double-check there as well after ~5 min\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst Update = () => {\n  const { width, height } = useWindowSize();\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Thanks for updating your page :)</Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst InstructiveFileUpload = ({ userId, advanceStep }) => {\n  return (\n    <>\n      <img width=\"800px\" src=\"/upload_robinhood.png\" />\n      <CSVUpload userId={userId} advanceStep={advanceStep} />\n    </>\n  );\n};\n\n// const UploadTrades = ({ advanceStep, setShowUpload, userId }) => {\n\n// };\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const [editId, setEditId] = useState();\n  const [err, setErr] = useState(false);\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n  });\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setRefresh(true);\n      // setUserId(plaid_refresh_id);\n    }\n    let plaid_login = params.get(\"plaid_login\");\n    let edit_id = params.get(\"edit\");\n    if (!!edit_id) {\n      setStep(1);\n      setEditId(edit_id);\n\n      if (!!plaid_login) {\n        axios\n          .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: edit_id })\n          .then((res) => {\n            setUserId(res.data.user);\n          });\n        setStep(2);\n      }\n\n      // fetch initial props\n      axios\n        .get(`${BASE_DOMAIN}/stonks/access/edit_info`, {\n          params: {\n            edit_id: edit_id,\n          },\n        })\n        .then((res) => {\n          let editable = Object.assign({}, res.data);\n          editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n          setEditDetails(editable);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErr(true);\n        });\n    }\n  }, []);\n\n  function renderStep() {\n    if (err) {\n      return <div>Something went wrong with laguna</div>;\n    } else {\n      if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n      else if (step === 1)\n        return (\n          <UserInfo\n            advanceStep={() =>\n              editDetails.plaid_connected && !refresh ? \"\" : setStep(2)\n            }\n            setUserId={setUserId}\n            refresh={refresh}\n            editId={editId}\n            editDetails={editDetails}\n            setEditDetails={setEditDetails}\n          />\n        );\n      else if (step === 2)\n        return (\n          <PlaidInfo\n            userId={userId}\n            advanceStep={setStep}\n            refresh={refresh}\n            title={editDetails.title}\n          />\n        );\n      else if (step === 3) return <Wait />;\n      else if (step === 4) return <Update />;\n      else if (step === 5)\n        return <InstructiveFileUpload userId={userId} advanceStep={setStep} />;\n      else return <></>;\n    }\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n    >\n      <Grid item xs={11} sm={8} md={6}>\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core\"\nimport {AccessForm} from \"./AccessForm.js\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AccessForm/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}