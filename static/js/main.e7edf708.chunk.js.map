{"version":3,"sources":["AccessForm.js","App.js","reportWebVitals.js","index.js"],"names":["AccessCode","advanceStep","useState","input","setInput","error","setError","theme","useTheme","handleFailure","Lock","Typography","variant","style","display","flexDirection","alignItems","justifyContent","TextField","label","value","onChange","e","target","placeholder","helperText","Button","backgroundImage","color","marginLeft","spacing","onClick","axios","get","then","res","data","allow","catch","UserInfo","setUserId","editId","editDetails","setEditDetails","refresh","title","setTitle","description","setDescription","link","setLink","subdomain","setSubdomain","name","setName","email","setEmail","phone","setPhone","show_amounts","showAmounts","setShowAmounts","useEffect","add_plaid","plaid_connected","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","params","subdomain_link","padding","Alert","severity","Paper","marginBottom","Link","href","fullWidth","onBlur","FormControl","component","margin","size","textAlign","marginTop","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","post","edit_id","id","PlaidInfo","userId","token","setToken","presignedPost","setPresignedPost","uploading","setUploading","preview","raw","uploadFile","setUploadFile","link_token","config","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","getSignedUrl","fileName","replace","file_name","disabled","marginRight","CircularProgress","fontWeight","preventDefault","console","log","formData","FormData","Object","keys","fields","forEach","k","v","append","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","finally","type","hidden","files","length","split","pop","URL","createObjectURL","Wait","useWindowSize","width","height","Update","AccessForm","step","setStep","setRefresh","setEditId","search","window","location","URLSearchParams","editable","assign","err","Grid","container","justify","minHeight","item","xs","sm","md","paddingTop","paddingBottom","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7edf708.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { Lock } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\n\n/*********\n * 3 Steps:\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  Link,\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst UserInfo = ({\n  advanceStep,\n  setUserId,\n  editId,\n  editDetails,\n  setEditDetails,\n  refresh\n}) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const [title, setTitle] = useState(editDetails.title);\n  const [description, setDescription] = useState(editDetails.description);\n  const [link, setLink] = useState(editDetails.link);\n  const [subdomain, setSubdomain] = useState(editDetails.subdomain);\n  const [name, setName] = useState(editDetails.name);\n  const [email, setEmail] = useState(editDetails.email);\n  const [phone, setPhone] = useState(editDetails.phone);\n  const [showAmounts, setShowAmounts] = useState(editDetails.show_amounts);\n\n  useEffect(() => {\n    setTitle(editDetails.title);\n    setDescription(editDetails.description);\n    setLink(editDetails.link);\n    setSubdomain(editDetails.subdomain);\n    setName(editDetails.name);\n    setEmail(editDetails.email);\n    setPhone(editDetails.phone);\n    setShowAmounts(editDetails.show_amounts);\n  }, [editDetails]);\n\n  const add_plaid = editDetails.plaid_connected != !!editDetails.subdomain;\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`https://api.withlaguna.com/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n        edit_id: editId,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          advanceStep();\n\n          // Update details via callback?\n          setEditDetails({\n            title: title,\n            description: description,\n            link: link,\n            subdomain: subdomain,\n            show_amounts: showAmounts ? \"yes\" : \"no\",\n            name: name,\n            email: email,\n            phone: phone,\n            plaid_connected: editDetails.plaid_connected,\n          });\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    if (!!editId) {\n      if (body.subdomain && body.subdomain == editDetails.subdomain) return;\n      else if (body.email && body.email === editDetails.email) return;\n      else if (body.phone && body.phone === editDetails.phone) return;\n    }\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  const subdomain_link = `https://${editDetails.subdomain}.withlaguna.com`;\n\n  return (\n    <>\n      <Typography variant=\"h4\">Account creation and configuration</Typography>\n      {add_plaid && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"error\">\n            Your page is live, but your brokerage hasn't been connected yet\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={advanceStep}\n          >\n            Import your trades\n          </Button>\n        </div>\n      )}\n            {refresh && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"warning\">\n            Your brokerage credentials have expired. Please re-log them\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={advanceStep}\n          >\n            Reconnect\n          </Button>\n        </div>\n      )}\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            Used to customize your page :){\" \"}\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            label=\"Personal Bio Link (optional)\"\n            helperText=\"Twitter handle, website, Linkedin, etc. Write as https://withterra.com\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              setSubdomain(e.target.value);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e enter 'rob' if you want, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && (\n          <Typography color=\"red\">\n            Something went wrong :(. Please double check your information\n          </Typography>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          {!!editDetails.subdomain && (\n            <div>\n              <Typography>Check out your page: </Typography>\n              <Link href={subdomain_link}>{subdomain_link}</Link>\n            </div>\n          )}\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            {!!editId ? \"Update\" : \"Submit\"} Information\n          </Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh, title }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const [showUpload, setShowUpload] = useState(false);\n  const [presignedPost, setPresignedPost] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadFile, setUploadFile] = useState({\n    preview: \"\",\n    raw: \"\",\n    name: \"\",\n  });\n\n  useEffect(() => {\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep();\n      return;\n    }\n    axios\n      .post(`https://api.withlaguna.com/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      let name = e.target.value.split(\"\\\\\").pop();\n      setUploadFile({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n        name: name,\n      });\n      getSignedUrl(name);\n    }\n  };\n\n  const getSignedUrl = (name) => {\n    let fileName = name.replace(/[^\\w\\d_\\-.]+/gi, \"\");\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/sign/${userId}`, {\n        params: { file_name: fileName },\n      })\n      .then((res) => {\n        setPresignedPost(res.data);\n      });\n  };\n\n  const onUploadProgress = (e) => {\n    console.log(e);\n  };\n\n  const handleUpload = (e) => {\n    setUploading(true);\n    e.preventDefault();\n\n    console.log(presignedPost);\n    console.log(uploadFile);\n\n    const formData = new FormData();\n    Object.keys(presignedPost.fields).forEach((k) => {\n      const v = presignedPost.fields[k];\n      formData.append(k, v);\n    });\n    formData.append(\"file\", uploadFile.raw);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = parseInt(\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        );\n        // Update state here\n        onUploadProgress(progress);\n      },\n    };\n\n    axios\n      .post(`${presignedPost.url}`, formData, config)\n      .then((res) => {\n        advanceStep();\n      })\n      .catch(console.error(\"Uploading problemo\"))\n      .finally(setUploading(false));\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in banking connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: theme.spacing(2),\n          alignItems: \"center\",\n        }}\n      >\n        <Button\n          onClick={() => {\n            open();\n          }}\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n          disabled={!!uploadFile.preview}\n        >\n          Connect bank account\n        </Button>\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        {!uploadFile.preview ? (\n          <Button\n            component=\"label\"\n            style={{ color: \"linear-gradient(to top right, #A01A7D, #EC4067)\" }}\n          >\n            Manually upload trades(CSV)\n            <input type=\"file\" hidden onChange={handleChange} />\n          </Button>\n        ) : uploading ? (\n          <CircularProgress />\n        ) : (\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n              fontWeight: 800,\n            }}\n            onClick={handleUpload}\n          >\n            Upload {uploadFile.name}\n          </Button>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"p1\">\n        We've gotten reports that our emails are ending in your spam box. Please\n        double-check there as well after ~5 min\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n}\n\nconst Update = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Thanks for updating your page :)</Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\n// const UploadTrades = ({ advanceStep, setShowUpload, userId }) => {\n\n// };\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const [editId, setEditId] = useState();\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n  });\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setStep(1);\n      setRefresh(true);\n      // setUserId(plaid_refresh_id);\n    }\n    // let plaid_login_id = params.get(\"plaid_login\");\n    // if (!!plaid_login_id) {\n    //   setStep(2);\n    //   setUserId(plaid_login_id);\n    // }\n    let edit_id = params.get(\"edit\");\n    if (!!edit_id) {\n      setStep(1);\n      setEditId(edit_id);\n\n      // fetch initial props\n      axios\n        .get(`https://api.withlaguna.com/stonks/access/edit_info`, {\n          params: {\n            edit_id: edit_id,\n          },\n        })\n        .then((res) => {\n          let editable = Object.assign({}, res.data);\n          editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n          setEditDetails(editable);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, []);\n\n  function renderStep() {\n    if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n    else if (step === 1)\n      return (\n        <UserInfo\n          advanceStep={() => (editDetails.plaid_connected ? \"\" : setStep(2))}\n          setUserId={setUserId}\n          refresh={refresh}\n          editId={editId}\n          editDetails={editDetails}\n          setEditDetails={setEditDetails}\n        />\n      );\n    else if (step === 2)\n      return (\n        <PlaidInfo\n          userId={userId}\n          advanceStep={() => setStep(3)}\n          refresh={refresh}\n          title={editDetails.title}\n        />\n      );\n    else if (step === 3) return <Wait />;\n    else if (step === 4) return <Update />;\n    else return <></>;\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n    >\n      <Grid item xs={11} sm={8} md={6}>\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core\"\nimport {AccessForm} from \"./AccessForm.js\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AccessForm/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}