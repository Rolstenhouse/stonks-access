{"version":3,"sources":["EnterTradesTable.js","TradeRow.js","colors.js","ManTradesTable.js","AccessForm.js","App.js","reportWebVitals.js","index.js"],"names":["TradeRow","props","state","value_ticker","ticker","value_weight","weight","errText","undefined","TableRow","TableCell","TextField","value","this","placeholder","InputProps","style","color","inputProps","textTransform","onChange","e","setState","target","handleEdit","toUpperCase","parseFloat","index","allowNegative","decimalScale","customInput","weightPlace","endAdornment","InputAdornment","position","onValueChange","console","log","floatValue","React","Component","piePallete","ManTradesTable","handleCreate","trades","axios","post","userId","filter","t","isNaN","then","res","data","advanceStep","catch","err","response","errMsg","handleHoldingEdit","validPortfolio","new_trades","length","push","total_weight","reduce","sum","isDup","i","concat","map","slice","title","Typography","variant","display","alignItems","marginTop","flexGrow","marginLeft","Table","TableHead","TableBody","toFixed","textAlign","Button","disabled","onClick","backgroundImage","opacity","radius","lineWidth","viewBoxSize","center","lengthAngle","Math","min","BASE_DOMAIN","AccessCode","useState","input","setInput","error","setError","theme","useTheme","handleFailure","Lock","flexDirection","justifyContent","label","helperText","spacing","get","allow","UserInfo","setUserId","editId","editDetails","setEditDetails","refresh","setTitle","description","setDescription","link","setLink","subdomain","setSubdomain","name","setName","email","setEmail","phone","setPhone","show_amounts","showAmounts","setShowAmounts","setDangerousUserId","useEffect","edit_id","user","add_plaid","plaid_connected","handleSubmit","id","editUrl","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","params","subdomain_link","Link","href","padding","Alert","severity","Paper","marginBottom","fullWidth","temp","replace","onBlur","FormControl","component","margin","size","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","CSVUpload","presignedPost","setPresignedPost","uploading","setUploading","preview","raw","uploadFile","setUploadFile","getSignedUrl","fileName","file_name","CircularProgress","fontWeight","preventDefault","formData","FormData","Object","keys","fields","forEach","k","v","append","config","headers","onUploadProgress","progressEvent","parseInt","round","loaded","total","url","finally","type","hidden","files","split","pop","URL","createObjectURL","PlaidInfo","token","setToken","showTable","plaidStatus","setPlaidStatus","link_token","brokers","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","maxWidth","marginRight","status","Wait","useWindowSize","width","height","Finished","displayDetail","pageUrl","Update","InstructiveFileUpload","src","SignIn","success","setSuccess","submitting","setSubmitting","LinearProgress","varian","AccessForm","step","setStep","setRefresh","setEditId","setErr","window","location","hash","search","URLSearchParams","plaid_login","editable","assign","Grid","container","justify","minHeight","item","xs","sm","md","IconButton","float","ArrowBackIosRounded","paddingTop","paddingBottom","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8c5cded.chunk.js","sourcesContent":["// Enter trade table.jsx\n\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport NumberFormat from \"react-number-format\";\nimport axios from \"axios\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst trade = {\n  tradeType: \"buy\" | \"sell\",\n  tradeDate: \"\",\n  costBasis: \"\",\n  quantity: \"\",\n  ticker: \"\",\n  priceSold: \"\",\n  percentageReturn: \"\", //calculated here\n};\n\nconst formValues = {\n  tradeDate: {\n    title: \"Trade Date (mm/dd/yyyy)\",\n    pl: \"mm/dd/yyyy\",\n    init: \"\",\n    required: true,\n  },\n  costBasis: {\n    title: \"Cost Basis (Total assets bought)\",\n    helperText: \"\",\n    pl: \"$10.01\",\n    init: \"\",\n    required: true,\n    number: true,\n  },\n  quantity: {\n    title: \"Quantity\",\n    pl: \"5\",\n    init: \"\",\n    required: true,\n    number: true,\n  },\n  ticker: { title: \"Ticker\", pl: \"AAPL\", init: \"\", required: true },\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      isNumericString\n      prefix=\"$\"\n    />\n  );\n}\n\nconst NewTradeRow = ({ userId, onSubmit }) => {\n  const editableTrades = Object.keys(formValues).reduce((res, key) => {\n    res[key] = formValues[key].init || \"\";\n    return res;\n  }, {});\n\n  const [editTrades, setEditTrades] = useState(editableTrades);\n  const [errorTrades, setErrorTrades] = useState(editableTrades);\n  const [generalError, setGeneralError] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    setEditTrades({\n      ...editTrades,\n      [e.target.name]: e.target.value,\n    });\n    setErrorTrades({\n      ...errorTrades,\n      [e.target.name]: false,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    // Submit this information into the DB and push it into the existing trades\n    e.preventDefault();\n\n    // Check trades are filled out\n    let invalid = Object.entries(formValues)\n      .filter(([key, value]) => {\n        return value?.required && !editTrades[key];\n      })\n      .reduce((res, [k, v]) => {\n        res[k] = true;\n        return res;\n      }, {});\n    if (Object.keys(invalid).length > 0) {\n      setErrorTrades(invalid);\n      return;\n    }\n\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/insert/${userId}`, editTrades)\n      .then((res) => {\n        if (res.data.allow) {\n          onSubmit(editTrades);\n          // Clear trading entries\n          setEditTrades(editableTrades);\n        } else {\n          setGeneralError(res.data);\n        }\n      })\n      .catch((err) => {\n        if (err.response) {\n          // check data\n          const err_msg = err.response.data.err;\n          if (!!err_msg?.form) {\n            setErrorTrades(\n              err_msg.form.reduce((res, filter) => {\n                const k = Object.keys(filter)[0];\n                const v = filter[k];\n                res[k] = v;\n                return res;\n              }, {})\n            );\n          } else {\n            setGeneralError(JSON.stringify(err_msg));\n          }\n        }\n        // something went wrong here\n      });\n  };\n\n  return (\n    <TableRow style={{ height: 50 }}>\n      {Object.entries(formValues).map(([key, value]) => {\n        return (\n          <TableCell key={key}>\n            <TextField\n              name={key}\n              onChange={handleInputChange}\n              placeholder={value.pl}\n              // label={value.pl}\n              value={editTrades[key]}\n              error={!!errorTrades[key]}\n              size=\"tiny\"\n              fullWidth\n              helperText={\n                !!errorTrades[key] ? errorTrades[key] : value?.helperText\n              }\n              required={value?.required}\n            />\n          </TableCell>\n        );\n      })}\n\n      <TableCell>\n        <Button\n          onClick={handleSubmit}\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n        >\n          Add trade\n        </Button>\n        {!!generalError && <>{generalError}</>}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport const EnterTradesTable = ({ userId }) => {\n  const [trades, setTrades] = useState([]);\n  const theme = useTheme();\n\n  useEffect(() => {\n    // set trades from BE that were manually entered\n    axios.get(`${BASE_DOMAIN}/stonks/access/trades/${userId}`).then((res) => {\n      if (res.data.allow) {\n        setTrades(res.data.trades);\n      }\n    });\n  }, []);\n\n  const onSubmit = (editTrades) => {\n    // some logic to insert a trade here\n    setTrades([...trades, editTrades]);\n  };\n\n  // Add new trade row\n\n  return (\n    <Table\n      size=\"small\"\n      style={{ marginTop: theme.spacing(4), marginBottom: theme.spacing(4) }}\n    >\n      <TableHead>\n        <TableRow>\n          {Object.entries(formValues).map(([key, value]) => {\n            return <TableCell key={key}>{value.title}</TableCell>;\n          })}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {trades.map((t) => {\n          return (\n            <TableRow>\n              <TableCell>{t.tradeDate}</TableCell>\n              <TableCell>{t.costBasis}</TableCell>\n              <TableCell>{t.quantity}</TableCell>\n              <TableCell>{t.ticker}</TableCell>\n            </TableRow>\n          );\n        })}\n        <NewTradeRow onSubmit={onSubmit} userId={userId} />\n      </TableBody>\n    </Table>\n  );\n};\n","import React, { useState } from \"react\";\nimport MaskedInput from \"react-maskedinput\";\n\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport NumberFormat from \"react-number-format\";\n\nfunction WeightInput(props) {\n  return (\n    <NumberFormat\n      allowNegative={false}\n      decimalScale=\"1\"\n      customInput={TextField}\n      placeholder=\"10.0\"\n    />\n  );\n}\n\nclass TradeRow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value_ticker: this.props.ticker,\n      value_weight: this.props.weight,\n      errText: undefined,\n    };\n  }\n\n  render() {\n    return (\n      <TableRow>\n        <TableCell>\n          <TextField\n            value={this.state.value_ticker}\n            placeholder=\"AAPL/CASH\"\n            InputProps={{\n              style: {\n                color:\n                  this.state.value_ticker == \"\" ? undefined : this.props.color,\n              },\n            }}\n            inputProps={{\n                style: {\n                    textTransform: \"uppercase\"\n                },\n              }}\n            onChange={(e) => {\n              this.setState({ value_ticker: e.target.value });\n              this.props.handleEdit(\n                e.target.value.toUpperCase(),\n                parseFloat(this.state.value_weight),\n                this.props.index\n              );\n            }}\n          />\n        </TableCell>\n        <TableCell>\n          <NumberFormat\n            allowNegative={false}\n            decimalScale=\"1\"\n            customInput={TextField}\n            placeholder={this.props.weightPlace}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"start\">%</InputAdornment>,\n            }}\n            onValueChange={(e) => {\n              console.log(\"handle change\", e.floatValue);\n              this.setState({ value_weight: e.floatValue });\n              this.props.handleEdit(\n                this.state.value_ticker,\n                e.floatValue,\n                this.props.index\n              );\n            }}\n          />\n        </TableCell>\n      </TableRow>\n    );\n  }\n}\n\nexport default TradeRow;\n","export const piePallete = ['#0074D9', '#FF4136', '#2ECC40', '#FF851B', '#7FDBFF', '#B10DC9', '#FFDC00', '#001f3f', '#39CCCC', '#01FF70', '#85144b', '#F012BE', '#3D9970', '#111111', '#AAAAAA']","import React, { useState } from \"react\";\nimport TradeRow from \"./TradeRow\";\nimport { PieChart } from \"react-minimal-pie-chart\";\nimport { piePallete } from \"./colors\";\n// import { useTheme } from \"@material-ui/core/styles\";\n\nimport {\n  Button,\n  Table,\n  TableRow,\n  TableCell,\n  TextField,\n  TableBody,\n  TableHead,\n  Typography,\n  IconButton\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nlet REDIRECT_DOMAIN =\n  process.env.NODE_ENV === \"development\"\n    ? \".localhost:4200/\"\n    : \".withlaguna.com/\";\nlet REDIRECT_BASE =\n  process.env.NODE_ENV === \"development\" ? \"http://\" : \"https://\";\n//   const theme = useTheme();\n\nclass ManTradesTable extends React.Component {\n    \n  constructor(props) {\n    super(props);\n    // const [trades, setTrades] = useState([])\n    // consol\n    // trade invariant: stored\n    this.state = {\n      trades: [{ ticker: \"\", weight: null }],\n      total_weight: 0,\n      validPortfolio: false,\n    };\n    \n  }\n\n  handleCreate = () => {\n    // this.props.onTemperatureChange(e.target.value)\n    console.log(\"Create was clicked\", this.state.trades);\n\n    axios\n      .post(\n        `${BASE_DOMAIN}/stonks/holdings/create/${this.props.userId}`,\n        this.state.trades.filter((t) => !isNaN(t.weight) && t.ticker != \"\")\n      )\n      .then((res) => {\n        console.log(\"success\", res.data);\n        // const redirect_str = REDIRECT_BASE.concat(res.data, REDIRECT_DOMAIN);\n        // window.location.href = redirect_str;\n        this.props.advanceStep(8);\n      })\n      .catch((err) => {\n        if (err.response) {\n          // check data\n          const errMsg = err.response.data.errMsg;\n          this.setState({ errMsg: errMsg });\n        }\n      });\n  };\n\n  handleHoldingEdit = (ticker, weight, index) => {\n    //   new_trades = this.state.trades\n    console.log(\"handle holding edit with index \", index, ticker);\n    let validPortfolio = true;\n\n    const new_trades = this.state.trades;\n    if (index + 1 >= new_trades.length && ticker != \"\" && !isNaN(weight)) {\n      new_trades.push({ ticker: \"\", weight: null });\n    }\n\n    new_trades[index] = { weight: weight, ticker: ticker };\n\n    const total_weight = new_trades.reduce((sum, t) => {\n      return sum + (t.weight ? parseFloat(t.weight) : 0);\n    }, 0);\n    if (total_weight != 100) validPortfolio = false;\n\n    let errMsg = undefined;\n    if (\n      new_trades.reduce((isDup, t, i) => {\n        return isDup || (t.ticker == ticker && index != i && ticker != '');\n      }, false)\n    ) {\n      errMsg = \"Duplicate ticker: \".concat(ticker);\n      validPortfolio = false;\n    }\n\n    console.log(\"total weight\", total_weight);\n\n    this.setState({\n      trades: new_trades,\n      total_weight: total_weight,\n      errMsg: errMsg,\n      validPortfolio: validPortfolio,\n    });\n  };\n\n  render() {\n    var data = this.state.trades.map((t, index) => {\n      const weight = isNaN(t.weight) ? 0 : t.weight;\n\n      const slice = {\n        title: t.ticker,\n        value: weight,\n        color: piePallete[index % piePallete.length],\n      };\n      console.log(slice);\n      return slice;\n    });\n    console.log(\"data length: \", data.length);\n\n    return (\n      <div>\n          \n         \n          \n          \n        <Typography variant=\"h4\">\n          Manually Enter Your Holdings to Create Your Portfolio\n        </Typography>\n        <Typography style={{ color: \"gray\" }} variant=\"subtitle1\">\n          Ensure your percentages add up to 100%\n        </Typography>\n        \n\n        <div\n          style={{ display: \"flex\", alignItems: \"flex-start\", marginTop: 20 }}\n        >\n          <div style={{ flexGrow: \"1\", marginLeft: 20 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Ticker</TableCell>\n                  <TableCell>Percent</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.trades.map((t, index) => {\n                  return (\n                    <TradeRow\n                      weightPlace={(100 - this.state.total_weight).toFixed(1)}\n                      handleEdit={this.handleHoldingEdit}\n                      ticker={t.ticker}\n                      weight={t.weight}\n                      index={index}\n                      color={piePallete[index % piePallete.length]}\n                    />\n                  );\n                })}\n              </TableBody>\n              {this.state.errMsg != undefined && (\n          <Typography \n          variant=\"caption\"\n          style={{ color: \"red\",\n          textAlign: \"left\",\n          \n          marginTop: 5 }}>{this.state.errMsg}</Typography>\n        )}\n            </Table>\n\n            \n            <div\n              style={{\n                textAlign: \"right\",\n                marginTop: 5,\n              }}\n            >\n              Total:{\" \"}\n              <span\n                style={{\n                  color: this.state.total_weight <= 100 ? \"green\" : \"red\",\n                }}\n              >\n                {this.state.total_weight}%{\" \"}\n              </span>{\" \"}\n              of 100%\n            </div>\n\n          \n\n            <Button\n              disabled={!this.state.validPortfolio}\n              onClick={this.handleCreate}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n                color: \"white\",\n                opacity: this.state.validPortfolio ? 1.0 : 0.5,\n                marginTop: 20,\n              }}\n            >\n              Create Portfolio\n            </Button>\n          </div>\n\n          <PieChart\n            style={{ flexGrow: \"1\" }}\n            radius={20}\n            lineWidth={15}\n            viewBoxSize={[100, 100]}\n            center={[50, 30]}\n            lengthAngle={Math.min((this.state.total_weight / 100) * 360, 360)}\n            data={data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ManTradesTable;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { Lock } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\nimport { EnterTradesTable } from \"./EnterTradesTable\";\nimport ManTradesTable from \"./ManTradesTable\";\nimport MaskedInput from \"react-text-mask\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Redirect } from \"react-router\";\nimport { ArrowBackIosRounded } from \"@material-ui/icons\";\n/*********\n * 3 Steps:ti\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  CircularProgress,\n  LinearProgress,\n  Link,\n  IconButton\n} from \"@material-ui/core\";\n\nimport { Alert } from \"@material-ui/lab\";\n\nlet BASE_DOMAIN = `https://api.withlaguna.com`;\nif (process.env.NODE_ENV === \"development\") BASE_DOMAIN = \"http://0.0.0.0:5000\";\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst UserInfo = ({\n  advanceStep,\n  setUserId,\n  editId,\n  editDetails,\n  setEditDetails,\n  refresh,\n}) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const [title, setTitle] = useState(editDetails.title);\n  const [description, setDescription] = useState(editDetails.description);\n  const [link, setLink] = useState(editDetails.link);\n  const [subdomain, setSubdomain] = useState(editDetails.subdomain);\n  const [name, setName] = useState(editDetails.name);\n  const [email, setEmail] = useState(editDetails.email);\n  const [phone, setPhone] = useState(editDetails.phone);\n  const [showAmounts, setShowAmounts] = useState(editDetails.show_amounts);\n  const [userId, setDangerousUserId] = useState(\"\");\n\n  useEffect(() => {\n    setTitle(editDetails.title);\n    setDescription(editDetails.description);\n    setLink(editDetails.link);\n    setSubdomain(editDetails.subdomain);\n    setName(editDetails.name);\n    setEmail(editDetails.email);\n    setPhone(editDetails.phone);\n    setShowAmounts(editDetails.show_amounts);\n\n    //\n    if (!!editId) {\n      axios\n        .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: editId })\n        .then((res) => {\n          setDangerousUserId(res.data.user);\n        });\n    }\n  }, [editDetails]);\n\n  const add_plaid = editDetails.plaid_connected != !!editDetails.subdomain;\n\n  // TODO: avoid resubmitting every time here, and just get the user associated\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n        edit_id: editId,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          // Update details via callback?\n          setEditDetails({\n            title: title,\n            description: description,\n            link: link,\n            subdomain: subdomain,\n            show_amounts: showAmounts ? \"yes\" : \"no\",\n            name: name,\n            email: email,\n            phone: phone,\n            plaid_connected: editDetails.plaid_connected,\n            editUrl: res.data.editUrl,\n          });\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    if (!!editId) {\n      if (body.subdomain && body.subdomain == editDetails.subdomain) return;\n      else if (body.email && body.email === editDetails.email) return;\n      else if (body.phone && body.phone === editDetails.phone) return;\n    }\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  const subdomain_link = `https://${editDetails.subdomain}.withlaguna.com`;\n\n  return (\n    <>\n      <Typography variant=\"h4\">Account creation and configuration</Typography>\n      {!editId && (\n        <>\n          <Typography variant=\"h6\">\n            <Link href=\"/#/signin\">Sign in</Link>\n          </Typography>\n        </>\n      )}\n      {add_plaid && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"error\">\n            Your page is live, but your brokerage hasn't been connected yet\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Import your trades\n          </Button>\n        </div>\n      )}\n      {refresh && (\n        <div\n          style={{\n            padding: theme.spacing(4),\n          }}\n        >\n          <Alert severity=\"warning\">\n            Your brokerage credentials have expired. Please re-log them\n          </Alert>\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Reconnect\n          </Button>\n        </div>\n      )}\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            Used to customize your page :){\" \"}\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            label=\"Personal Bio Link (optional)\"\n            helperText=\"Twitter handle, website, Linkedin, etc. Write as https://withterra.com\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              let temp = e.target.value;\n              temp = temp.replace(/\\W/g, \"\");\n              setSubdomain(temp);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e enter 'rob' if you want, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && (\n          <Typography color=\"red\">\n            Something went wrong :(. Please double check your information\n          </Typography>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          {!!editDetails.subdomain && (\n            <div>\n              <Typography>Check out your page: </Typography>\n              <Link href={subdomain_link}>{subdomain_link}</Link>\n            </div>\n          )}\n          <Button\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            {!!editId ? \"Update\" : \"Submit\"} Information\n          </Button>\n        </div>\n      </form>\n      {!!userId && (\n        <>\n          <Typography variant=\"h4\">Manual trades</Typography>\n          <ManTradesTable userId={userId} />\n        </>\n      )}\n    </>\n  );\n};\n\nconst CSVUpload = ({ userId, advanceStep }) => {\n  const [showUpload, setShowUpload] = useState(false);\n  const [presignedPost, setPresignedPost] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadFile, setUploadFile] = useState({\n    preview: \"\",\n    raw: \"\",\n    name: \"\",\n  });\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      let name = e.target.value.split(\"\\\\\").pop();\n      setUploadFile({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n        name: name,\n      });\n      getSignedUrl(name);\n    }\n  };\n\n  const getSignedUrl = (name) => {\n    let fileName = name.replace(/[^\\w\\d_\\-.]+/gi, \"\");\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/sign/${userId}`, {\n        params: { file_name: fileName },\n      })\n      .then((res) => {\n        setPresignedPost(res.data);\n      });\n  };\n\n  const onUploadProgress = (e) => {\n    console.log(e);\n  };\n\n  const handleUpload = (e) => {\n    setUploading(true);\n    e.preventDefault();\n\n    console.log(presignedPost);\n    console.log(uploadFile);\n\n    const formData = new FormData();\n    Object.keys(presignedPost.fields).forEach((k) => {\n      const v = presignedPost.fields[k];\n      formData.append(k, v);\n    });\n    formData.append(\"file\", uploadFile.raw);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = parseInt(\n          Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        );\n        // Update state here\n        onUploadProgress(progress);\n      },\n    };\n\n    axios\n      .post(`${presignedPost.url}`, formData, config)\n      .then((res) => {\n        advanceStep(3);\n        axios\n          .get(`${BASE_DOMAIN}/stonks/access/uploaded/${userId}`)\n          .then((res) => {\n            console.log(res);\n          })\n          .catch(console.error(\"Did not set manual trade issue\"));\n      })\n      .catch(console.error(\"Uploading problemo\"))\n      .finally(setUploading(false));\n  };\n\n  return (\n    <>\n      {!uploadFile.preview ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            Upload a screenshot of your positions\n            <input type=\"file\" hidden onChange={handleChange} />\n          </Button>\n          <Typography variant=\"caption\">\n            We'll automatically process the data for you\n          </Typography>\n        </div>\n      ) : uploading ? (\n        <CircularProgress />\n      ) : (\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n            color: \"white\",\n            fontWeight: 800,\n          }}\n          onClick={handleUpload}\n        >\n          Upload {uploadFile.name}\n        </Button>\n      )}\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh, title }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const theme = useTheme();\n\n  const [plaidStatus, setPlaidStatus] = useState([]);\n\n  const getPlaidStatus = () => {\n    // ALWAYS GET PLAID STATUS FROM THE API\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_status`)\n      .then((res) => {\n        setPlaidStatus(res.data?.brokers || []);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n\n    getPlaidStatus();\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep(3);\n      return;\n    }\n    axios\n      .post(`${BASE_DOMAIN}/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep(3);\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  const handleManualEntry = () => {\n    advanceStep(7);\n  };\n\n  const handleFileUpload = () => {\n    advanceStep(5);\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in brokerage connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError || !title) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: theme.spacing(2),\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            maxWidth: \"400px\",\n          }}\n        >\n          <Button\n            onClick={() => {\n              open();\n            }}\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n          >\n            <b style={{ marginRight: \"4px\" }}>Auto</b> Connect brokerage\n          </Button>\n          {plaidStatus.map((status) => (\n            <Alert style={{ marginTop: theme.spacing(2) }} severity=\"warning\">\n              {status}\n            </Alert>\n          ))}\n        </div>\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleFileUpload}\n        >\n          <b style={{ marginRight: \"4px\" }}>EASIEST</b> Upload a screenshot of\n          your positions\n        </Button>\n        <Typography variant=\"caption\">\n          We'll automatically process the data for you\n        </Typography>\n        {/* <CSVUpload userId={userId} advanceStep={advanceStep} /> */}\n        <div\n          style={{\n            marginLeft: theme.spacing(2),\n            marginRight: theme.spacing(2),\n          }}\n        >\n          or\n        </div>\n        <Button\n          component=\"label\"\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #bd5fa4, #f27995)\",\n            color: \"white\",\n          }}\n          onClick={handleManualEntry}\n        >\n          <b style={{ marginRight: \"4px\" }}>Manual</b> Enter trades\n        </Button>\n      </div>\n\n      <>\n        {showTable && (\n          <>\n            <ManTradesTable userId={userId} />\n            <Button\n              onClick={() => {\n                advanceStep();\n              }}\n              style={{\n                backgroundImage:\n                  \"linear-gradient(to top right, #729FBF, #E0CDE1)\",\n                color: \"white\",\n              }}\n            >\n              CONTINUE\n            </Button>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"p1\">\n        We've gotten reports that our emails are ending in your spam box. Please\n        double-check there as well after ~5 min\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst Finished = ({ displayDetail }) => {\n  const { width, height } = useWindowSize();\n  console.log(\"in finish with display\", displayDetail);\n  let REDIRECT_BASE =\n    process.env.NODE_ENV === \"development\" ? \"http://\" : \"https://\";\n  let REDIRECT_DOMAIN =\n    process.env.NODE_ENV === \"development\"\n      ? \".localhost:4200/\"\n      : \".withlaguna.com/\";\n\n  const pageUrl = `${REDIRECT_BASE}${displayDetail.subdomain}${REDIRECT_DOMAIN}`;\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Congrats {displayDetail.name}!</Typography>\n      <Typography variant=\"h5\">Your page is ready at</Typography>\n      <Typography>\n        <Link href={pageUrl}>{displayDetail.subdomain}.withLaguna.com</Link>\n      </Typography>\n\n      <Typography style={{ marginTop: 30 }}>\n        You can edit your profile at <br />\n        <Link href={displayDetail.editUrl}>{displayDetail.editUrl}</Link>\n      </Typography>\n\n      <Button\n        href={pageUrl}\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n          marginTop: 50,\n        }}\n      >\n        View Page\n      </Button>\n    </>\n  );\n};\n\nconst Update = () => {\n  const { width, height } = useWindowSize();\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">Thanks for updating your page :)</Typography>\n      <br />\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nconst InstructiveFileUpload = ({ userId, advanceStep }) => {\n  return (\n    <>\n      <img width=\"800px\" src=\"/upload_robinhood.png\" />\n      <CSVUpload userId={userId} advanceStep={advanceStep} />\n    </>\n  );\n};\n\n// const UploadTrades = ({ advanceStep, setShowUpload, userId }) => {\n\n// };\n\nconst SignIn = ({}) => {\n  const [success, setSuccess] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const theme = useTheme();\n\n  const handleSubmit = () => {\n    setSubmitting(true);\n    axios\n      .get(`${BASE_DOMAIN}/stonks/access/send`, { params: { email: email } })\n      .then(() => {\n        setSuccess(true);\n      })\n      .catch((err) => {\n        if (err.response) {\n          setError(err.response.data.err);\n        } else {\n          setError(\"Please email support@withlaguna.com\");\n        }\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  return (\n    <div\n      style={{ marginLeft: theme.spacing(12), marginRight: theme.spacing(12) }}\n    >\n      <Typography variant=\"h5\">\n        Enter your email address to get your sign-in link\n      </Typography>\n      <br />\n      <br />\n      {!success && (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            label=\"Email\"\n            error={!!error}\n            helperText={error}\n          />\n          <br />\n          {submitting && <LinearProgress />}\n          <Button\n            component=\"label\"\n            style={{\n              backgroundImage:\n                \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n              color: \"white\",\n            }}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </div>\n      )}\n      {!!success && (\n        <Typography varian=\"body\">\n          You've been sent an email. Click it to access your admin page\n        </Typography>\n      )}\n      <br />\n      <br />\n      <Typography variant=\"caption\">\n        Having an issue? <a href=\"mailto:team@withlaguna.com\">Contact us</a>\n      </Typography>\n    </div>\n  );\n};\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const [editId, setEditId] = useState();\n  const [err, setErr] = useState(false);\n  const [editDetails, setEditDetails] = useState({\n    title: \"\",\n    description: \"\",\n    link: \"\",\n    subdomain: \"\",\n    show_amounts: \"no\",\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    plaid_connected: false,\n  });\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let hash = window.location.hash;\n    if (hash == \"#/signin\") {\n      setStep(6);\n    }\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setRefresh(true);\n      // setUserId(plaid_refresh_id);\n    }\n    let plaid_login = params.get(\"plaid_login\");\n    let edit_id = params.get(\"edit\");\n    if (!!edit_id) {\n      setStep(1);\n      setEditId(edit_id);\n\n      if (!!plaid_login) {\n        axios\n          .post(`${BASE_DOMAIN}/stonks/access/exchange`, { edit_id: edit_id })\n          .then((res) => {\n            setUserId(res.data.user);\n          });\n        setStep(2);\n      }\n\n      // fetch initial props\n      axios\n        .get(`${BASE_DOMAIN}/stonks/access/edit_info`, {\n          params: {\n            edit_id: edit_id,\n          },\n        })\n        .then((res) => {\n          let editable = Object.assign({}, res.data);\n          editable.show_amounts = !!editable.show_amounts ? \"yes\" : \"no\";\n          setEditDetails(editable);\n        })\n        .catch((err) => {\n          console.log(err);\n          setErr(true);\n        });\n    }\n  }, []);\n\n  function renderStep() {\n    if (err) {\n      return <div>Something went wrong with laguna</div>;\n    } else {\n      if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n      else if (step === 1)\n        return (\n          <UserInfo\n            advanceStep={() =>\n              editDetails.plaid_connected && !refresh ? \"\" : setStep(2)\n            }\n            setUserId={setUserId}\n            refresh={refresh}\n            editId={editId}\n            editDetails={editDetails}\n            setEditDetails={setEditDetails}\n          />\n        );\n      else if (step === 2)\n        return (\n          <PlaidInfo\n            userId={userId}\n            advanceStep={setStep}\n            refresh={refresh}\n            title={editDetails.title}\n          />\n        );\n      else if (step === 3) return <Wait />;\n      else if (step === 4) return <Update />;\n      else if (step === 5)\n        return <InstructiveFileUpload userId={userId} advanceStep={setStep} />;\n      else if (step == 6) return <SignIn />;\n      else if (step == 7)\n        return <ManTradesTable userId={userId} advanceStep={setStep} />;\n      else if (step == 8) return <Finished displayDetail={editDetails} />;\n      else return <></>;\n    }\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n    >\n      <Grid item xs={11} sm={8} md={6}>\n      {(step == 7 || step ==5) && <IconButton size=\"small\" style={{float: 'left',  marginTop: theme.spacing(3)}}\n                    onClick={() => setStep(2)}>\n                <ArrowBackIosRounded/>\n                Back\n        </IconButton>}\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core\"\nimport {AccessForm} from \"./AccessForm.js\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AccessForm/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}