{"version":3,"sources":["AccessForm.js","App.js","reportWebVitals.js","index.js"],"names":["AccessCode","advanceStep","useState","input","setInput","error","setError","theme","useTheme","handleFailure","Lock","Typography","variant","style","display","flexDirection","alignItems","justifyContent","TextField","label","value","onChange","e","target","placeholder","helperText","Button","backgroundImage","color","marginLeft","spacing","onClick","axios","get","then","res","data","allow","catch","UserInfo","setUserId","title","setTitle","description","setDescription","link","setLink","subdomain","setSubdomain","name","setName","email","setEmail","phone","setPhone","showAmounts","setShowAmounts","subdomainError","setSubdomainError","emailError","setEmailError","phoneError","setPhoneError","checkUnique","body","params","Paper","padding","marginBottom","Link","href","fullWidth","onBlur","FormControl","component","margin","size","textAlign","marginTop","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","post","show_amounts","id","PlaidInfo","userId","refresh","token","setToken","useEffect","link_token","config","onSuccess","useCallback","metadata","usePlaidLink","open","plaidError","ready","Wait","useWindowSize","width","height","AccessForm","step","setStep","setRefresh","search","window","location","URLSearchParams","plaid_refresh_id","plaid_login_id","Grid","container","justify","minHeight","item","xs","sm","md","paddingTop","paddingBottom","createMuiTheme","typography","fontFamily","join","palette","secondary","main","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4932a783.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { usePlaidLink } from \"react-plaid-link\";\n\nimport { Lock } from \"@material-ui/icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useWindowSize from \"react-use/lib/useWindowSize\";\nimport Confetti from \"react-confetti\";\n\n/*********\n * 3 Steps:\n * 1) Check Access Code\n * 2) Add email (and other information), phone, (not displayed), url to show, subdomain, title, byline\n * 3) Connect plaid\n * 4) Wait a day for the page to be created\n */\n\nimport {\n  Grid,\n  Paper,\n  TextField,\n  Button,\n  Typography,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Link,\n} from \"@material-ui/core\";\n\nconst AccessCode = ({ advanceStep }) => {\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/code/${input}`)\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  return (\n    <>\n      <Lock />\n      <Typography variant=\"h4\">Enter your early access code</Typography>\n      <form\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TextField\n          label=\"Early Access Code\"\n          error={error}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"OPEN SESAME\"\n          helperText={error && \"Invalid access code. Please try again :)\"}\n        />\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n            marginLeft: theme.spacing(4),\n          }}\n          onClick={handleSubmit}\n        >\n          Enter\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst UserInfo = ({ advanceStep, setUserId }) => {\n  const theme = useTheme();\n  const [error, setError] = useState(false);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [link, setLink] = useState(\"\");\n  const [subdomain, setSubdomain] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [showAmounts, setShowAmounts] = useState(\"no\");\n\n  const handleSubmit = (e) => {\n    setError(false);\n    axios\n      .post(`https://api.withlaguna.com/stonks/access/form`, {\n        title: title,\n        description: description,\n        link: link,\n        subdomain: subdomain,\n        name: name,\n        email: email,\n        phone: phone,\n        show_amounts: showAmounts === \"yes\",\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          setUserId(res.data.id);\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  };\n\n  const [subdomainError, setSubdomainError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const checkUnique = (body) => {\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/check_unique`, {\n        params: body,\n      })\n      .then((res) => {})\n      .catch(() => {\n        if (body.subdomain)\n          setSubdomainError(\"Subdomain has already been claimed\");\n        else if (body.email) setEmailError(\"Email has already been claimed\");\n        else if (body.phone) setPhoneError(\"Phone has already been claimed\");\n      });\n  };\n\n  return (\n    <>\n      <Typography variant=\"h4\">Account creation and configuration</Typography>\n      <form>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Your page information</Typography>\n          <Typography variant=\"caption\">\n            Used to customize your page :){\" \"}\n            <Link href=\"https://rob.withlaguna.com\">Sample Site</Link>\n          </Typography>\n          <TextField\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            label=\"Title\"\n            helperText=\"Ex) Rob's Stonks\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            label=\"Description\"\n            helperText=\"Ex) Trading on long-term horizons\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={link}\n            onChange={(e) => setLink(e.target.value)}\n            label=\"Personal Bio Link (optional)\"\n            helperText=\"Twitter handle, website, Linkedin, etc. Write as https://withterra.com\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={subdomain}\n            onChange={(e) => {\n              setSubdomain(e.target.value);\n              setSubdomainError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ subdomain: subdomain })}\n            label=\"Desired subdomain\"\n            helperText={\n              !!subdomainError\n                ? subdomainError\n                : \"i.e enter 'rob' if you want, rob.withlaguna.com\"\n            }\n            error={!!subdomainError}\n            fullWidth\n          ></TextField>\n          <FormControl\n            component=\"fieldset\"\n            margin=\"none\"\n            fullWidth\n            size=\"small\"\n            style={{ textAlign: \"left\", marginTop: theme.spacing(1) }}\n          >\n            <FormLabel component=\"legend\">Portfolio privacy setting</FormLabel>\n            <RadioGroup\n              aria-label=\"show amounts\"\n              name=\"Show portfolio amounts\"\n              value={showAmounts}\n              onChange={(e) => setShowAmounts(e.target.value)}\n            >\n              <FormControlLabel\n                value=\"no\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio percentage only\"\n              />\n              <FormControlLabel\n                value=\"yes\"\n                control={<Radio color=\"primary\" size=\"small\" />}\n                label=\"Show portfolio amounts in USD\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Paper>\n        <Paper\n          style={{ padding: theme.spacing(6), marginBottom: theme.spacing(2) }}\n        >\n          <Typography variant=\"h6\">Confidential information</Typography>\n          <Typography variant=\"caption\">\n            Information entered in this section will NEVER be revealed on your\n            site\n          </Typography>\n          <TextField\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            label=\"Full name\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setEmailError(\"\");\n            }}\n            onBlur={() => {\n              checkUnique({ email: email });\n            }}\n            helperText={!!emailError ? emailError : \"\"}\n            error={!!emailError}\n            label=\"Email\"\n            fullWidth\n          ></TextField>\n          <TextField\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value);\n              setPhoneError(\"\");\n            }}\n            onBlur={(e) => checkUnique({ phone: phone })}\n            helperText={!!phoneError ? phoneError : \"\"}\n            error={!!phoneError}\n            label=\"Phone\"\n            fullWidth\n          ></TextField>\n        </Paper>\n        {error && (\n          <Typography color=\"red\">\n            Something went wrong :(. Please double check your information\n          </Typography>\n        )}\n        <Button\n          style={{\n            backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n            color: \"white\",\n          }}\n          onClick={handleSubmit}\n        >\n          Submit Information\n        </Button>\n      </form>\n    </>\n  );\n};\n\nconst PlaidInfo = ({ advanceStep, userId, refresh }) => {\n  const [token, setToken] = useState(\"\");\n  const [error, setError] = useState(false);\n  const theme = useTheme();\n\n  useEffect(() => {\n    axios\n      .get(`https://api.withlaguna.com/stonks/access/plaid_token/${userId}`, {\n        params: {\n          refresh: refresh,\n        },\n      })\n      .then((res) => {\n        if (res.data.link_token) {\n          setToken(res.data.link_token);\n        } else {\n          handleFailure();\n        }\n      })\n      .catch(() => {\n        handleFailure();\n      });\n  }, []);\n\n  const handleFailure = () => {\n    setError(true);\n  };\n\n  const onSuccess = useCallback((token, metadata) => {\n    // when refreshing no need to post any new data\n    if (refresh) {\n      advanceStep();\n      return;\n    }\n    axios\n      .post(`https://api.withlaguna.com/stonks/access/plaid/${userId}`, {\n        token: token,\n        metadata: metadata,\n      })\n      .then((res) => {\n        if (res.data.allow) {\n          advanceStep();\n        } else {\n          handleFailure();\n        }\n      });\n  });\n\n  const config = {\n    token: token,\n    onSuccess,\n  };\n\n  const { open, ready, plaidError } = usePlaidLink(config);\n\n  return (\n    <>\n      <Typography variant=\"h4\">Connect your investment brokerage</Typography>\n      <Typography>\n        Your portfolio is automatically monitored, and trades are immediately\n        updated using Plaid, the standard in banking connections.\n      </Typography>\n      <Typography variant=\"caption\">Only read access is allowed</Typography>\n      {(error || plaidError) && (\n        <Typography> Something went wrong :( </Typography>\n      )}\n      <Button\n        onClick={() => {\n          open();\n        }}\n        style={{\n          backgroundImage: \"linear-gradient(to top right, #A01A7D, #EC4067)\",\n          color: \"white\",\n          display: \"flex\",\n          margin: \"auto\",\n          marginTop: theme.spacing(2),\n        }}\n      >\n        Connect bank account\n      </Button>\n    </>\n  );\n};\n\nconst Wait = () => {\n  const { width, height } = useWindowSize();\n\n  return (\n    <>\n      <Confetti width={width} height={height} />\n      <Typography variant=\"h4\">\n        Your page is building! We'll send you an email when it's ready\n      </Typography>\n      <Typography variant=\"caption\">\n        Feedback? Email team@withlaguna.com\n      </Typography>\n    </>\n  );\n};\n\nexport const AccessForm = () => {\n  // Ignore Access Code\n  const [step, setStep] = useState(1);\n  const [refresh, setRefresh] = useState(false);\n  const [userId, setUserId] = useState();\n  const theme = useTheme();\n\n  // IF in refresh mode\n  useEffect(() => {\n    let search = window.location.search;\n    let params = new URLSearchParams(search);\n    let plaid_refresh_id = params.get(\"plaid_refresh\");\n    if (!!plaid_refresh_id) {\n      setStep(2);\n      setRefresh(true);\n      setUserId(plaid_refresh_id);\n    }\n    let plaid_login_id = params.get(\"plaid_login\");\n    if (!!plaid_login_id) {\n      setStep(2);\n      setUserId(plaid_login_id);\n    }\n  }, []);\n\n  function renderStep() {\n    if (step === 0) return <AccessCode advanceStep={() => setStep(1)} />;\n    else if (step === 1)\n      return <UserInfo advanceStep={() => setStep(2)} setUserId={setUserId} />;\n    else if (step === 2)\n      return (\n        <PlaidInfo\n          userId={userId}\n          advanceStep={() => setStep(3)}\n          refresh={refresh}\n        />\n      );\n    else if (step === 3) return <Wait />;\n    else return <></>;\n  }\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={{\n        minHeight: \"100vh\",\n        backgroundImage: \"linear-gradient(to top right, #669bbc, #ecd1e5)\",\n      }}\n    >\n      <Grid item xs={11} sm={8} md={6}>\n        <Paper\n          style={{\n            paddingTop: theme.spacing(12),\n            paddingBottom: theme.spacing(12),\n          }}\n        >\n          {step >= 0 && renderStep()}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n","import \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {ThemeProvider} from \"@material-ui/core\"\nimport {AccessForm} from \"./AccessForm.js\"\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Nunito\",\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n    ].join(\",\"),\n  },\n  palette: {\n    secondary: {\n      main: \"#ffffff\",\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <AccessForm/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}